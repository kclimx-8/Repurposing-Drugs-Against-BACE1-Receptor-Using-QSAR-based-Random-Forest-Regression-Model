{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Connect to Google Drive"],"metadata":{"id":"jFVdFz7ZbNk8"}},{"cell_type":"code","execution_count":1,"metadata":{"id":"X-CK1YySar_d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708845222190,"user_tz":-480,"elapsed":31501,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"6489be86-1573-4265-ad14-7a332d02f684"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/Shareddrives/Thesis (PS4)/[01] Colab/[01] DP\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","%cd gdrive/Shareddrives/Thesis (PS4)/[01] Colab/[01] DP"]},{"cell_type":"markdown","source":["##Installing/Importing Libraries"],"metadata":{"id":"2MWFrzTkyMgc"}},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"a7oFZ0iyy4_X","executionInfo":{"status":"ok","timestamp":1708845223663,"user_tz":-480,"elapsed":1476,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["!pip install rdkit"],"metadata":{"id":"J0z9V4YBy9Gh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708845236883,"user_tz":-480,"elapsed":13224,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"e0d6f051-18e6-4d69-ddab-335e67af0e6c"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting rdkit\n","  Downloading rdkit-2023.9.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m34.4/34.4 MB\u001b[0m \u001b[31m21.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from rdkit) (1.25.2)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.10/dist-packages (from rdkit) (9.4.0)\n","Installing collected packages: rdkit\n","Successfully installed rdkit-2023.9.5\n"]}]},{"cell_type":"code","source":["import numpy as np\n","from rdkit import Chem\n","from rdkit.Chem import Descriptors, Lipinski"],"metadata":{"id":"pvZrZ0oxy33p","executionInfo":{"status":"ok","timestamp":1708845237317,"user_tz":-480,"elapsed":440,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns\n","sns.set(style='ticks')\n","import matplotlib.pyplot as plt"],"metadata":{"id":"iBMX9SPayKVY","executionInfo":{"status":"ok","timestamp":1708845238065,"user_tz":-480,"elapsed":752,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["## Installing ChEMBL web service\n","! pip install chembl_webresource_client;\n","\n","from chembl_webresource_client.new_client import new_client;"],"metadata":{"id":"Dx9ipwd2vwki","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708845251063,"user_tz":-480,"elapsed":13003,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"5cd938a6-9039-43af-ca39-9bbaa9443321"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting chembl_webresource_client\n","  Downloading chembl_webresource_client-0.10.8-py3-none-any.whl (55 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/55.2 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m55.2/55.2 kB\u001b[0m \u001b[31m1.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from chembl_webresource_client) (2.0.7)\n","Requirement already satisfied: requests>=2.18.4 in /usr/local/lib/python3.10/dist-packages (from chembl_webresource_client) (2.31.0)\n","Collecting requests-cache~=0.7.0 (from chembl_webresource_client)\n","  Downloading requests_cache-0.7.5-py3-none-any.whl (39 kB)\n","Requirement already satisfied: easydict in /usr/local/lib/python3.10/dist-packages (from chembl_webresource_client) (1.12)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.18.4->chembl_webresource_client) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.18.4->chembl_webresource_client) (3.6)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.18.4->chembl_webresource_client) (2024.2.2)\n","Collecting attrs<22.0,>=21.2 (from requests-cache~=0.7.0->chembl_webresource_client)\n","  Downloading attrs-21.4.0-py2.py3-none-any.whl (60 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m60.6/60.6 kB\u001b[0m \u001b[31m7.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: itsdangerous>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from requests-cache~=0.7.0->chembl_webresource_client) (2.1.2)\n","Requirement already satisfied: pyyaml>=5.4 in /usr/local/lib/python3.10/dist-packages (from requests-cache~=0.7.0->chembl_webresource_client) (6.0.1)\n","Collecting url-normalize<2.0,>=1.4 (from requests-cache~=0.7.0->chembl_webresource_client)\n","  Downloading url_normalize-1.4.3-py2.py3-none-any.whl (6.8 kB)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from url-normalize<2.0,>=1.4->requests-cache~=0.7.0->chembl_webresource_client) (1.16.0)\n","Installing collected packages: url-normalize, attrs, requests-cache, chembl_webresource_client\n","  Attempting uninstall: attrs\n","    Found existing installation: attrs 23.2.0\n","    Uninstalling attrs-23.2.0:\n","      Successfully uninstalled attrs-23.2.0\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","jsonschema 4.19.2 requires attrs>=22.2.0, but you have attrs 21.4.0 which is incompatible.\n","referencing 0.33.0 requires attrs>=22.2.0, but you have attrs 21.4.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed attrs-21.4.0 chembl_webresource_client-0.10.8 requests-cache-0.7.5 url-normalize-1.4.3\n"]}]},{"cell_type":"markdown","source":["##Data Collection"],"metadata":{"id":"4QCXU1u8vw8R"}},{"cell_type":"code","source":["## Target search for beta-secretase receptor\n","target = new_client.target\n","target_query = target.search('beta-secretase')\n","targets = pd.DataFrame.from_dict(target_query)\n","pd.set_option('display.max_rows', 100)\n","pd.set_option('display.max_columns', 100)\n","targets"],"metadata":{"id":"QDELY0bGy09H","colab":{"base_uri":"https://localhost:8080/","height":808},"executionInfo":{"status":"ok","timestamp":1708845508292,"user_tz":-480,"elapsed":230785,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"ccbf8a01-4d07-48d2-f16a-3db0009c077e"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                       cross_references           organism  \\\n","0                                                    []       Homo sapiens   \n","1                                                    []  Rattus norvegicus   \n","2     [{'xref_id': 'Q9Y5Z0', 'xref_name': None, 'xre...       Homo sapiens   \n","3     [{'xref_id': 'Beta-secretase_1', 'xref_name': ...       Homo sapiens   \n","4     [{'xref_id': 'P56818', 'xref_name': None, 'xre...       Mus musculus   \n","...                                                 ...                ...   \n","1289                                                 []       Homo sapiens   \n","1290                                                 []       Homo sapiens   \n","1291                                                 []       Homo sapiens   \n","1292                                                 []       Homo sapiens   \n","1293                                                 []           Bacteria   \n","\n","                                          pref_name  score  \\\n","0                             Beta-secretase (BACE)   20.0   \n","1                                  Beta-secretase 2   19.0   \n","2                                  Beta secretase 2   18.0   \n","3                                  Beta-secretase 1   18.0   \n","4                                  Beta-secretase 1   18.0   \n","...                                             ...    ...   \n","1289                                        Caspase    1.0   \n","1290                                         mTORC1    1.0   \n","1291                                         mTORC2    1.0   \n","1292  Amiloride-sensitive sodium channel, ENaC mRNA    1.0   \n","1293                         Bacterial 70S ribosome    0.0   \n","\n","      species_group_flag target_chembl_id  \\\n","0                  False    CHEMBL2111390   \n","1                  False    CHEMBL2331066   \n","2                  False       CHEMBL2525   \n","3                  False       CHEMBL4822   \n","4                  False       CHEMBL4593   \n","...                  ...              ...   \n","1289               False    CHEMBL3831289   \n","1290               False    CHEMBL4296661   \n","1291               False    CHEMBL4523999   \n","1292               False    CHEMBL4834389   \n","1293                True    CHEMBL2363135   \n","\n","                                      target_components  \\\n","0     [{'accession': 'Q9Y5Z0', 'component_descriptio...   \n","1     [{'accession': 'Q6IE75', 'component_descriptio...   \n","2     [{'accession': 'Q9Y5Z0', 'component_descriptio...   \n","3     [{'accession': 'P56817', 'component_descriptio...   \n","4     [{'accession': 'P56818', 'component_descriptio...   \n","...                                                 ...   \n","1289  [{'accession': 'P49662', 'component_descriptio...   \n","1290  [{'accession': 'P42345', 'component_descriptio...   \n","1291  [{'accession': 'P42345', 'component_descriptio...   \n","1292  [{'accession': 'ENSG00000166828', 'component_d...   \n","1293  [{'accession': 'P0A7V0', 'component_descriptio...   \n","\n","                       target_type   tax_id  \n","0                   PROTEIN FAMILY   9606.0  \n","1                   SINGLE PROTEIN  10116.0  \n","2                   SINGLE PROTEIN   9606.0  \n","3                   SINGLE PROTEIN   9606.0  \n","4                   SINGLE PROTEIN  10090.0  \n","...                            ...      ...  \n","1289                PROTEIN FAMILY   9606.0  \n","1290               PROTEIN COMPLEX   9606.0  \n","1291               PROTEIN COMPLEX   9606.0  \n","1292                  NUCLEIC-ACID   9606.0  \n","1293  PROTEIN NUCLEIC-ACID COMPLEX      2.0  \n","\n","[1294 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-2b204990-b44e-4cb9-bf1f-bbee682b484d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>cross_references</th>\n","      <th>organism</th>\n","      <th>pref_name</th>\n","      <th>score</th>\n","      <th>species_group_flag</th>\n","      <th>target_chembl_id</th>\n","      <th>target_components</th>\n","      <th>target_type</th>\n","      <th>tax_id</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>[]</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase (BACE)</td>\n","      <td>20.0</td>\n","      <td>False</td>\n","      <td>CHEMBL2111390</td>\n","      <td>[{'accession': 'Q9Y5Z0', 'component_descriptio...</td>\n","      <td>PROTEIN FAMILY</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>[]</td>\n","      <td>Rattus norvegicus</td>\n","      <td>Beta-secretase 2</td>\n","      <td>19.0</td>\n","      <td>False</td>\n","      <td>CHEMBL2331066</td>\n","      <td>[{'accession': 'Q6IE75', 'component_descriptio...</td>\n","      <td>SINGLE PROTEIN</td>\n","      <td>10116.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>[{'xref_id': 'Q9Y5Z0', 'xref_name': None, 'xre...</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta secretase 2</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>CHEMBL2525</td>\n","      <td>[{'accession': 'Q9Y5Z0', 'component_descriptio...</td>\n","      <td>SINGLE PROTEIN</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>[{'xref_id': 'Beta-secretase_1', 'xref_name': ...</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>CHEMBL4822</td>\n","      <td>[{'accession': 'P56817', 'component_descriptio...</td>\n","      <td>SINGLE PROTEIN</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>[{'xref_id': 'P56818', 'xref_name': None, 'xre...</td>\n","      <td>Mus musculus</td>\n","      <td>Beta-secretase 1</td>\n","      <td>18.0</td>\n","      <td>False</td>\n","      <td>CHEMBL4593</td>\n","      <td>[{'accession': 'P56818', 'component_descriptio...</td>\n","      <td>SINGLE PROTEIN</td>\n","      <td>10090.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1289</th>\n","      <td>[]</td>\n","      <td>Homo sapiens</td>\n","      <td>Caspase</td>\n","      <td>1.0</td>\n","      <td>False</td>\n","      <td>CHEMBL3831289</td>\n","      <td>[{'accession': 'P49662', 'component_descriptio...</td>\n","      <td>PROTEIN FAMILY</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>1290</th>\n","      <td>[]</td>\n","      <td>Homo sapiens</td>\n","      <td>mTORC1</td>\n","      <td>1.0</td>\n","      <td>False</td>\n","      <td>CHEMBL4296661</td>\n","      <td>[{'accession': 'P42345', 'component_descriptio...</td>\n","      <td>PROTEIN COMPLEX</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>1291</th>\n","      <td>[]</td>\n","      <td>Homo sapiens</td>\n","      <td>mTORC2</td>\n","      <td>1.0</td>\n","      <td>False</td>\n","      <td>CHEMBL4523999</td>\n","      <td>[{'accession': 'P42345', 'component_descriptio...</td>\n","      <td>PROTEIN COMPLEX</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>1292</th>\n","      <td>[]</td>\n","      <td>Homo sapiens</td>\n","      <td>Amiloride-sensitive sodium channel, ENaC mRNA</td>\n","      <td>1.0</td>\n","      <td>False</td>\n","      <td>CHEMBL4834389</td>\n","      <td>[{'accession': 'ENSG00000166828', 'component_d...</td>\n","      <td>NUCLEIC-ACID</td>\n","      <td>9606.0</td>\n","    </tr>\n","    <tr>\n","      <th>1293</th>\n","      <td>[]</td>\n","      <td>Bacteria</td>\n","      <td>Bacterial 70S ribosome</td>\n","      <td>0.0</td>\n","      <td>True</td>\n","      <td>CHEMBL2363135</td>\n","      <td>[{'accession': 'P0A7V0', 'component_descriptio...</td>\n","      <td>PROTEIN NUCLEIC-ACID COMPLEX</td>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1294 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2b204990-b44e-4cb9-bf1f-bbee682b484d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2b204990-b44e-4cb9-bf1f-bbee682b484d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2b204990-b44e-4cb9-bf1f-bbee682b484d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b84f91e-7b2c-4198-bc66-930cc80d0e28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b84f91e-7b2c-4198-bc66-930cc80d0e28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b84f91e-7b2c-4198-bc66-930cc80d0e28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"targets","summary":"{\n  \"name\": \"targets\",\n  \"rows\": 1294,\n  \"fields\": [\n    {\n      \"column\": \"cross_references\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"organism\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 142,\n        \"samples\": [\n          \"Myzus persicae\",\n          \"Sinorhizobium meliloti\",\n          \"Musca domestica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pref_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 975,\n        \"samples\": [\n          \"Estrogen-related receptor beta\",\n          \"Mitochondrial complex V; ATP synthase\",\n          \"Alpha-1a adrenergic receptor\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.840811793116914,\n        \"min\": 0.0,\n        \"max\": 20.0,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          20.0,\n          15.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"species_group_flag\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1294,\n        \"samples\": [\n          \"CHEMBL3065\",\n          \"CHEMBL1932904\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_components\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"target_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 13,\n        \"samples\": [\n          \"NUCLEIC-ACID\",\n          \"SMALL MOLECULE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tax_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62737.74563590559,\n        \"min\": 2.0,\n        \"max\": 746128.0,\n        \"num_unique_values\": 138,\n        \"samples\": [\n          52584.0,\n          246196.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["selected_target = targets.target_chembl_id[3]\n","selected_target"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"3W8dVCn5BL9C","executionInfo":{"status":"ok","timestamp":1708845508293,"user_tz":-480,"elapsed":21,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"d07630b2-74bc-4d72-e400-3a68617282e8"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'CHEMBL4822'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["activity = new_client.activity\n","res = activity.filter(target_chembl_id=selected_target).filter(standard_type=\"IC50\")"],"metadata":{"id":"4M7_-T__BOcP","executionInfo":{"status":"ok","timestamp":1708845508293,"user_tz":-480,"elapsed":16,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame.from_dict(res)\n"],"metadata":{"id":"ebK-K3hKBXRv","executionInfo":{"status":"ok","timestamp":1708846058669,"user_tz":-480,"elapsed":470545,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"id":"t63O8cQAFc3P","executionInfo":{"status":"ok","timestamp":1708846058670,"user_tz":-480,"elapsed":50,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"6f8917bb-d473-44eb-e38b-98359db74979","colab":{"base_uri":"https://localhost:8080/","height":877}},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             action_type activity_comment  \\\n","0                                                   None             None   \n","1                                                   None             None   \n","2                                                   None             None   \n","3                                                   None             None   \n","4                                                   None             None   \n","...                                                  ...              ...   \n","10614  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10615  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10616  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10617  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10618  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","\n","       activity_id                                activity_properties  \\\n","0            78857                                                 []   \n","1           391560                                                 []   \n","2           391983                                                 []   \n","3           395858                                                 []   \n","4           395859                                                 []   \n","...            ...                                                ...   \n","10614     24890923  [{'comments': None, 'relation': '=', 'result_f...   \n","10615     24890924  [{'comments': None, 'relation': '=', 'result_f...   \n","10616     24890925  [{'comments': None, 'relation': '=', 'result_f...   \n","10617     24963344                                                 []   \n","10618     24963345                                                 []   \n","\n","      assay_chembl_id                                  assay_description  \\\n","0        CHEMBL653511  Inhibitory activity against Beta-secretase 1 w...   \n","1        CHEMBL653332  Compound was tested for its inhibitory activit...   \n","2        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","3        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","4        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","...               ...                                                ...   \n","10614   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10615   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10616   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10617   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","10618   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","\n","      assay_type assay_variant_accession assay_variant_mutation bao_endpoint  \\\n","0              B                    None                   None  BAO_0000190   \n","1              B                    None                   None  BAO_0000190   \n","2              B                    None                   None  BAO_0000190   \n","3              B                    None                   None  BAO_0000190   \n","4              B                    None                   None  BAO_0000190   \n","...          ...                     ...                    ...          ...   \n","10614          B                    None                   None  BAO_0000190   \n","10615          B                    None                   None  BAO_0000190   \n","10616          B                    None                   None  BAO_0000190   \n","10617          B                    None                   None  BAO_0000190   \n","10618          B                    None                   None  BAO_0000190   \n","\n","        bao_format              bao_label  \\\n","0      BAO_0000357  single protein format   \n","1      BAO_0000357  single protein format   \n","2      BAO_0000357  single protein format   \n","3      BAO_0000357  single protein format   \n","4      BAO_0000357  single protein format   \n","...            ...                    ...   \n","10614  BAO_0000357  single protein format   \n","10615  BAO_0000357  single protein format   \n","10616  BAO_0000357  single protein format   \n","10617  BAO_0000357  single protein format   \n","10618  BAO_0000357  single protein format   \n","\n","                                        canonical_smiles  \\\n","0      CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1      CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2      CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3      CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4      CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                                                  ...   \n","10614  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","10615  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10616  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10617      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","10618       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","      data_validity_comment data_validity_description document_chembl_id  \\\n","0                      None                      None      CHEMBL1136466   \n","1                      None                      None      CHEMBL1144938   \n","2                      None                      None      CHEMBL1147464   \n","3                      None                      None      CHEMBL1147464   \n","4                      None                      None      CHEMBL1147464   \n","...                     ...                       ...                ...   \n","10614                  None                      None      CHEMBL5154724   \n","10615                  None                      None      CHEMBL5154724   \n","10616                  None                      None      CHEMBL5154724   \n","10617                  None                      None      CHEMBL5214927   \n","10618                  None                      None      CHEMBL5214927   \n","\n","           document_journal  document_year  \\\n","0      Bioorg Med Chem Lett           2003   \n","1                J Med Chem           2003   \n","2      Bioorg Med Chem Lett           2004   \n","3      Bioorg Med Chem Lett           2004   \n","4      Bioorg Med Chem Lett           2004   \n","...                     ...            ...   \n","10614       Bioorg Med Chem           2022   \n","10615       Bioorg Med Chem           2022   \n","10616       Bioorg Med Chem           2022   \n","10617        Eur J Med Chem           2022   \n","10618        Eur J Med Chem           2022   \n","\n","                                       ligand_efficiency molecule_chembl_id  \\\n","0      {'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...       CHEMBL406146   \n","1      {'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...        CHEMBL78946   \n","2      {'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...       CHEMBL324109   \n","3      {'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...       CHEMBL114147   \n","4      {'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...       CHEMBL419949   \n","...                                                  ...                ...   \n","10614  {'bei': '5.78', 'le': None, 'lle': None, 'sei'...      CHEMBL5192597   \n","10615  {'bei': '1.97', 'le': None, 'lle': None, 'sei'...      CHEMBL5184180   \n","10616  {'bei': '1.99', 'le': None, 'lle': None, 'sei'...      CHEMBL5184529   \n","10617  {'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...      CHEMBL5220695   \n","10618  {'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...      CHEMBL5219239   \n","\n","                molecule_pref_name parent_molecule_chembl_id pchembl_value  \\\n","0      HGLUVALLEUPNSASPALAGLUPHEOH              CHEMBL406146          6.38   \n","1                             None               CHEMBL78946          8.70   \n","2                             None              CHEMBL324109          6.34   \n","3                             None              CHEMBL114147          5.05   \n","4                             None              CHEMBL419949          5.25   \n","...                            ...                       ...           ...   \n","10614                         None             CHEMBL5192597          6.11   \n","10615                         None             CHEMBL5184180          5.99   \n","10616                         None             CHEMBL5184529          6.08   \n","10617                         None             CHEMBL5220695          7.82   \n","10618                         None             CHEMBL5219239          7.81   \n","\n","       potential_duplicate                                 qudt_units  \\\n","0                        0  http://www.openphacts.org/units/Nanomolar   \n","1                        1  http://www.openphacts.org/units/Nanomolar   \n","2                        0  http://www.openphacts.org/units/Nanomolar   \n","3                        0  http://www.openphacts.org/units/Nanomolar   \n","4                        0  http://www.openphacts.org/units/Nanomolar   \n","...                    ...                                        ...   \n","10614                    0  http://www.openphacts.org/units/Nanomolar   \n","10615                    0  http://www.openphacts.org/units/Nanomolar   \n","10616                    0  http://www.openphacts.org/units/Nanomolar   \n","10617                    0  http://www.openphacts.org/units/Nanomolar   \n","10618                    0  http://www.openphacts.org/units/Nanomolar   \n","\n","       record_id relation  src_id  standard_flag standard_relation  \\\n","0         260010        =       1              1                 =   \n","1         274693        =       1              1                 =   \n","2         219979        =       1              1                 =   \n","3         219988        =       1              1                 =   \n","4         219982        =       1              1                 =   \n","...          ...      ...     ...            ...               ...   \n","10614    3890233        =       1              1                 =   \n","10615    3890234        =       1              1                 =   \n","10616    3890235        =       1              1                 =   \n","10617    3899833        =       1              1                 =   \n","10618    3899834        =       1              1                 =   \n","\n","      standard_text_value standard_type standard_units standard_upper_value  \\\n","0                    None          IC50             nM                 None   \n","1                    None          IC50             nM                 None   \n","2                    None          IC50             nM                 None   \n","3                    None          IC50             nM                 None   \n","4                    None          IC50             nM                 None   \n","...                   ...           ...            ...                  ...   \n","10614                None          IC50             nM                 None   \n","10615                None          IC50             nM                 None   \n","10616                None          IC50             nM                 None   \n","10617                None          IC50             nM                 None   \n","10618                None          IC50             nM                 None   \n","\n","      standard_value target_chembl_id target_organism  target_pref_name  \\\n","0              413.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","1                2.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","2              460.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","3             9000.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","4             5600.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","...              ...              ...             ...               ...   \n","10614          775.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10615         1031.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10616          828.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10617           15.1       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10618           15.4       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","\n","      target_tax_id text_value  toid  type units    uo_units upper_value  \\\n","0              9606       None  None  IC50    nM  UO_0000065        None   \n","1              9606       None  None  IC50    uM  UO_0000065        None   \n","2              9606       None  None  IC50    uM  UO_0000065        None   \n","3              9606       None  None  IC50    uM  UO_0000065        None   \n","4              9606       None  None  IC50    uM  UO_0000065        None   \n","...             ...        ...   ...   ...   ...         ...         ...   \n","10614          9606       None  None  IC50    nM  UO_0000065        None   \n","10615          9606       None  None  IC50    nM  UO_0000065        None   \n","10616          9606       None  None  IC50    nM  UO_0000065        None   \n","10617          9606       None  None  IC50    nM  UO_0000065        None   \n","10618          9606       None  None  IC50    nM  UO_0000065        None   \n","\n","        value  \n","0       413.0  \n","1       0.002  \n","2        0.46  \n","3         9.0  \n","4         5.6  \n","...       ...  \n","10614   775.0  \n","10615  1031.0  \n","10616   828.0  \n","10617    15.1  \n","10618    15.4  \n","\n","[10619 rows x 46 columns]"],"text/html":["\n","  <div id=\"df-f2fd396f-ebaf-42e1-887c-0beb4be21e74\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>action_type</th>\n","      <th>activity_comment</th>\n","      <th>activity_id</th>\n","      <th>activity_properties</th>\n","      <th>assay_chembl_id</th>\n","      <th>assay_description</th>\n","      <th>assay_type</th>\n","      <th>assay_variant_accession</th>\n","      <th>assay_variant_mutation</th>\n","      <th>bao_endpoint</th>\n","      <th>bao_format</th>\n","      <th>bao_label</th>\n","      <th>canonical_smiles</th>\n","      <th>data_validity_comment</th>\n","      <th>data_validity_description</th>\n","      <th>document_chembl_id</th>\n","      <th>document_journal</th>\n","      <th>document_year</th>\n","      <th>ligand_efficiency</th>\n","      <th>molecule_chembl_id</th>\n","      <th>molecule_pref_name</th>\n","      <th>parent_molecule_chembl_id</th>\n","      <th>pchembl_value</th>\n","      <th>potential_duplicate</th>\n","      <th>qudt_units</th>\n","      <th>record_id</th>\n","      <th>relation</th>\n","      <th>src_id</th>\n","      <th>standard_flag</th>\n","      <th>standard_relation</th>\n","      <th>standard_text_value</th>\n","      <th>standard_type</th>\n","      <th>standard_units</th>\n","      <th>standard_upper_value</th>\n","      <th>standard_value</th>\n","      <th>target_chembl_id</th>\n","      <th>target_organism</th>\n","      <th>target_pref_name</th>\n","      <th>target_tax_id</th>\n","      <th>text_value</th>\n","      <th>toid</th>\n","      <th>type</th>\n","      <th>units</th>\n","      <th>uo_units</th>\n","      <th>upper_value</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>78857</td>\n","      <td>[]</td>\n","      <td>CHEMBL653511</td>\n","      <td>Inhibitory activity against Beta-secretase 1 w...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1136466</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2003</td>\n","      <td>{'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...</td>\n","      <td>CHEMBL406146</td>\n","      <td>HGLUVALLEUPNSASPALAGLUPHEOH</td>\n","      <td>CHEMBL406146</td>\n","      <td>6.38</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>260010</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391560</td>\n","      <td>[]</td>\n","      <td>CHEMBL653332</td>\n","      <td>Compound was tested for its inhibitory activit...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1144938</td>\n","      <td>J Med Chem</td>\n","      <td>2003</td>\n","      <td>{'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...</td>\n","      <td>CHEMBL78946</td>\n","      <td>None</td>\n","      <td>CHEMBL78946</td>\n","      <td>8.70</td>\n","      <td>1</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>274693</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>2.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.002</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391983</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...</td>\n","      <td>CHEMBL324109</td>\n","      <td>None</td>\n","      <td>CHEMBL324109</td>\n","      <td>6.34</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219979</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>460.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395858</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...</td>\n","      <td>CHEMBL114147</td>\n","      <td>None</td>\n","      <td>CHEMBL114147</td>\n","      <td>5.05</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219988</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>9000.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395859</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...</td>\n","      <td>CHEMBL419949</td>\n","      <td>None</td>\n","      <td>CHEMBL419949</td>\n","      <td>5.25</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219982</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>5600.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>5.6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10614</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890923</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '5.78', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5192597</td>\n","      <td>None</td>\n","      <td>CHEMBL5192597</td>\n","      <td>6.11</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890233</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","    </tr>\n","    <tr>\n","      <th>10615</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890924</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.97', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184180</td>\n","      <td>None</td>\n","      <td>CHEMBL5184180</td>\n","      <td>5.99</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890234</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","    </tr>\n","    <tr>\n","      <th>10616</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890925</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.99', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184529</td>\n","      <td>None</td>\n","      <td>CHEMBL5184529</td>\n","      <td>6.08</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890235</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","    </tr>\n","    <tr>\n","      <th>10617</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963344</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...</td>\n","      <td>CHEMBL5220695</td>\n","      <td>None</td>\n","      <td>CHEMBL5220695</td>\n","      <td>7.82</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899833</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>10618</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963345</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...</td>\n","      <td>CHEMBL5219239</td>\n","      <td>None</td>\n","      <td>CHEMBL5219239</td>\n","      <td>7.81</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899834</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10619 rows × 46 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2fd396f-ebaf-42e1-887c-0beb4be21e74')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f2fd396f-ebaf-42e1-887c-0beb4be21e74 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f2fd396f-ebaf-42e1-887c-0beb4be21e74');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84169809-506f-47e4-b6a0-fac944eb187d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84169809-506f-47e4-b6a0-fac944eb187d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84169809-506f-47e4-b6a0-fac944eb187d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.to_csv('01_bace1_raw_bioactivity_data.csv', index=False)\n"],"metadata":{"id":"5VTiJNKMB21o"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Data Cleaning"],"metadata":{"id":"15zVHdyfFuIC"}},{"cell_type":"code","source":["clean_dataset = df[df.standard_value.notna()]\n","clean_dataset"],"metadata":{"id":"EtX2l-kqCqcq","colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"status":"ok","timestamp":1708846058672,"user_tz":-480,"elapsed":32,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"2666fb9c-8d75-4ca9-b37a-c191413ccdfe"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             action_type activity_comment  \\\n","0                                                   None             None   \n","1                                                   None             None   \n","2                                                   None             None   \n","3                                                   None             None   \n","4                                                   None             None   \n","...                                                  ...              ...   \n","10614  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10615  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10616  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10617  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10618  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","\n","       activity_id                                activity_properties  \\\n","0            78857                                                 []   \n","1           391560                                                 []   \n","2           391983                                                 []   \n","3           395858                                                 []   \n","4           395859                                                 []   \n","...            ...                                                ...   \n","10614     24890923  [{'comments': None, 'relation': '=', 'result_f...   \n","10615     24890924  [{'comments': None, 'relation': '=', 'result_f...   \n","10616     24890925  [{'comments': None, 'relation': '=', 'result_f...   \n","10617     24963344                                                 []   \n","10618     24963345                                                 []   \n","\n","      assay_chembl_id                                  assay_description  \\\n","0        CHEMBL653511  Inhibitory activity against Beta-secretase 1 w...   \n","1        CHEMBL653332  Compound was tested for its inhibitory activit...   \n","2        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","3        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","4        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","...               ...                                                ...   \n","10614   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10615   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10616   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10617   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","10618   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","\n","      assay_type assay_variant_accession assay_variant_mutation bao_endpoint  \\\n","0              B                    None                   None  BAO_0000190   \n","1              B                    None                   None  BAO_0000190   \n","2              B                    None                   None  BAO_0000190   \n","3              B                    None                   None  BAO_0000190   \n","4              B                    None                   None  BAO_0000190   \n","...          ...                     ...                    ...          ...   \n","10614          B                    None                   None  BAO_0000190   \n","10615          B                    None                   None  BAO_0000190   \n","10616          B                    None                   None  BAO_0000190   \n","10617          B                    None                   None  BAO_0000190   \n","10618          B                    None                   None  BAO_0000190   \n","\n","        bao_format              bao_label  \\\n","0      BAO_0000357  single protein format   \n","1      BAO_0000357  single protein format   \n","2      BAO_0000357  single protein format   \n","3      BAO_0000357  single protein format   \n","4      BAO_0000357  single protein format   \n","...            ...                    ...   \n","10614  BAO_0000357  single protein format   \n","10615  BAO_0000357  single protein format   \n","10616  BAO_0000357  single protein format   \n","10617  BAO_0000357  single protein format   \n","10618  BAO_0000357  single protein format   \n","\n","                                        canonical_smiles  \\\n","0      CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1      CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2      CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3      CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4      CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                                                  ...   \n","10614  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","10615  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10616  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10617      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","10618       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","      data_validity_comment data_validity_description document_chembl_id  \\\n","0                      None                      None      CHEMBL1136466   \n","1                      None                      None      CHEMBL1144938   \n","2                      None                      None      CHEMBL1147464   \n","3                      None                      None      CHEMBL1147464   \n","4                      None                      None      CHEMBL1147464   \n","...                     ...                       ...                ...   \n","10614                  None                      None      CHEMBL5154724   \n","10615                  None                      None      CHEMBL5154724   \n","10616                  None                      None      CHEMBL5154724   \n","10617                  None                      None      CHEMBL5214927   \n","10618                  None                      None      CHEMBL5214927   \n","\n","           document_journal  document_year  \\\n","0      Bioorg Med Chem Lett           2003   \n","1                J Med Chem           2003   \n","2      Bioorg Med Chem Lett           2004   \n","3      Bioorg Med Chem Lett           2004   \n","4      Bioorg Med Chem Lett           2004   \n","...                     ...            ...   \n","10614       Bioorg Med Chem           2022   \n","10615       Bioorg Med Chem           2022   \n","10616       Bioorg Med Chem           2022   \n","10617        Eur J Med Chem           2022   \n","10618        Eur J Med Chem           2022   \n","\n","                                       ligand_efficiency molecule_chembl_id  \\\n","0      {'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...       CHEMBL406146   \n","1      {'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...        CHEMBL78946   \n","2      {'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...       CHEMBL324109   \n","3      {'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...       CHEMBL114147   \n","4      {'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...       CHEMBL419949   \n","...                                                  ...                ...   \n","10614  {'bei': '5.78', 'le': None, 'lle': None, 'sei'...      CHEMBL5192597   \n","10615  {'bei': '1.97', 'le': None, 'lle': None, 'sei'...      CHEMBL5184180   \n","10616  {'bei': '1.99', 'le': None, 'lle': None, 'sei'...      CHEMBL5184529   \n","10617  {'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...      CHEMBL5220695   \n","10618  {'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...      CHEMBL5219239   \n","\n","                molecule_pref_name parent_molecule_chembl_id pchembl_value  \\\n","0      HGLUVALLEUPNSASPALAGLUPHEOH              CHEMBL406146          6.38   \n","1                             None               CHEMBL78946          8.70   \n","2                             None              CHEMBL324109          6.34   \n","3                             None              CHEMBL114147          5.05   \n","4                             None              CHEMBL419949          5.25   \n","...                            ...                       ...           ...   \n","10614                         None             CHEMBL5192597          6.11   \n","10615                         None             CHEMBL5184180          5.99   \n","10616                         None             CHEMBL5184529          6.08   \n","10617                         None             CHEMBL5220695          7.82   \n","10618                         None             CHEMBL5219239          7.81   \n","\n","       potential_duplicate                                 qudt_units  \\\n","0                        0  http://www.openphacts.org/units/Nanomolar   \n","1                        1  http://www.openphacts.org/units/Nanomolar   \n","2                        0  http://www.openphacts.org/units/Nanomolar   \n","3                        0  http://www.openphacts.org/units/Nanomolar   \n","4                        0  http://www.openphacts.org/units/Nanomolar   \n","...                    ...                                        ...   \n","10614                    0  http://www.openphacts.org/units/Nanomolar   \n","10615                    0  http://www.openphacts.org/units/Nanomolar   \n","10616                    0  http://www.openphacts.org/units/Nanomolar   \n","10617                    0  http://www.openphacts.org/units/Nanomolar   \n","10618                    0  http://www.openphacts.org/units/Nanomolar   \n","\n","       record_id relation  src_id  standard_flag standard_relation  \\\n","0         260010        =       1              1                 =   \n","1         274693        =       1              1                 =   \n","2         219979        =       1              1                 =   \n","3         219988        =       1              1                 =   \n","4         219982        =       1              1                 =   \n","...          ...      ...     ...            ...               ...   \n","10614    3890233        =       1              1                 =   \n","10615    3890234        =       1              1                 =   \n","10616    3890235        =       1              1                 =   \n","10617    3899833        =       1              1                 =   \n","10618    3899834        =       1              1                 =   \n","\n","      standard_text_value standard_type standard_units standard_upper_value  \\\n","0                    None          IC50             nM                 None   \n","1                    None          IC50             nM                 None   \n","2                    None          IC50             nM                 None   \n","3                    None          IC50             nM                 None   \n","4                    None          IC50             nM                 None   \n","...                   ...           ...            ...                  ...   \n","10614                None          IC50             nM                 None   \n","10615                None          IC50             nM                 None   \n","10616                None          IC50             nM                 None   \n","10617                None          IC50             nM                 None   \n","10618                None          IC50             nM                 None   \n","\n","      standard_value target_chembl_id target_organism  target_pref_name  \\\n","0              413.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","1                2.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","2              460.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","3             9000.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","4             5600.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","...              ...              ...             ...               ...   \n","10614          775.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10615         1031.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10616          828.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10617           15.1       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10618           15.4       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","\n","      target_tax_id text_value  toid  type units    uo_units upper_value  \\\n","0              9606       None  None  IC50    nM  UO_0000065        None   \n","1              9606       None  None  IC50    uM  UO_0000065        None   \n","2              9606       None  None  IC50    uM  UO_0000065        None   \n","3              9606       None  None  IC50    uM  UO_0000065        None   \n","4              9606       None  None  IC50    uM  UO_0000065        None   \n","...             ...        ...   ...   ...   ...         ...         ...   \n","10614          9606       None  None  IC50    nM  UO_0000065        None   \n","10615          9606       None  None  IC50    nM  UO_0000065        None   \n","10616          9606       None  None  IC50    nM  UO_0000065        None   \n","10617          9606       None  None  IC50    nM  UO_0000065        None   \n","10618          9606       None  None  IC50    nM  UO_0000065        None   \n","\n","        value  \n","0       413.0  \n","1       0.002  \n","2        0.46  \n","3         9.0  \n","4         5.6  \n","...       ...  \n","10614   775.0  \n","10615  1031.0  \n","10616   828.0  \n","10617    15.1  \n","10618    15.4  \n","\n","[10472 rows x 46 columns]"],"text/html":["\n","  <div id=\"df-0b256cbb-3552-488e-9974-cdfb72840290\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>action_type</th>\n","      <th>activity_comment</th>\n","      <th>activity_id</th>\n","      <th>activity_properties</th>\n","      <th>assay_chembl_id</th>\n","      <th>assay_description</th>\n","      <th>assay_type</th>\n","      <th>assay_variant_accession</th>\n","      <th>assay_variant_mutation</th>\n","      <th>bao_endpoint</th>\n","      <th>bao_format</th>\n","      <th>bao_label</th>\n","      <th>canonical_smiles</th>\n","      <th>data_validity_comment</th>\n","      <th>data_validity_description</th>\n","      <th>document_chembl_id</th>\n","      <th>document_journal</th>\n","      <th>document_year</th>\n","      <th>ligand_efficiency</th>\n","      <th>molecule_chembl_id</th>\n","      <th>molecule_pref_name</th>\n","      <th>parent_molecule_chembl_id</th>\n","      <th>pchembl_value</th>\n","      <th>potential_duplicate</th>\n","      <th>qudt_units</th>\n","      <th>record_id</th>\n","      <th>relation</th>\n","      <th>src_id</th>\n","      <th>standard_flag</th>\n","      <th>standard_relation</th>\n","      <th>standard_text_value</th>\n","      <th>standard_type</th>\n","      <th>standard_units</th>\n","      <th>standard_upper_value</th>\n","      <th>standard_value</th>\n","      <th>target_chembl_id</th>\n","      <th>target_organism</th>\n","      <th>target_pref_name</th>\n","      <th>target_tax_id</th>\n","      <th>text_value</th>\n","      <th>toid</th>\n","      <th>type</th>\n","      <th>units</th>\n","      <th>uo_units</th>\n","      <th>upper_value</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>78857</td>\n","      <td>[]</td>\n","      <td>CHEMBL653511</td>\n","      <td>Inhibitory activity against Beta-secretase 1 w...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1136466</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2003</td>\n","      <td>{'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...</td>\n","      <td>CHEMBL406146</td>\n","      <td>HGLUVALLEUPNSASPALAGLUPHEOH</td>\n","      <td>CHEMBL406146</td>\n","      <td>6.38</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>260010</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391560</td>\n","      <td>[]</td>\n","      <td>CHEMBL653332</td>\n","      <td>Compound was tested for its inhibitory activit...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1144938</td>\n","      <td>J Med Chem</td>\n","      <td>2003</td>\n","      <td>{'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...</td>\n","      <td>CHEMBL78946</td>\n","      <td>None</td>\n","      <td>CHEMBL78946</td>\n","      <td>8.70</td>\n","      <td>1</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>274693</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>2.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.002</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391983</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...</td>\n","      <td>CHEMBL324109</td>\n","      <td>None</td>\n","      <td>CHEMBL324109</td>\n","      <td>6.34</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219979</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>460.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395858</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...</td>\n","      <td>CHEMBL114147</td>\n","      <td>None</td>\n","      <td>CHEMBL114147</td>\n","      <td>5.05</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219988</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>9000.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395859</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...</td>\n","      <td>CHEMBL419949</td>\n","      <td>None</td>\n","      <td>CHEMBL419949</td>\n","      <td>5.25</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219982</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>5600.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>5.6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10614</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890923</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '5.78', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5192597</td>\n","      <td>None</td>\n","      <td>CHEMBL5192597</td>\n","      <td>6.11</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890233</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","    </tr>\n","    <tr>\n","      <th>10615</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890924</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.97', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184180</td>\n","      <td>None</td>\n","      <td>CHEMBL5184180</td>\n","      <td>5.99</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890234</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","    </tr>\n","    <tr>\n","      <th>10616</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890925</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.99', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184529</td>\n","      <td>None</td>\n","      <td>CHEMBL5184529</td>\n","      <td>6.08</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890235</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","    </tr>\n","    <tr>\n","      <th>10617</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963344</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...</td>\n","      <td>CHEMBL5220695</td>\n","      <td>None</td>\n","      <td>CHEMBL5220695</td>\n","      <td>7.82</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899833</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>10618</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963345</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...</td>\n","      <td>CHEMBL5219239</td>\n","      <td>None</td>\n","      <td>CHEMBL5219239</td>\n","      <td>7.81</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899834</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10472 rows × 46 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b256cbb-3552-488e-9974-cdfb72840290')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b256cbb-3552-488e-9974-cdfb72840290 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b256cbb-3552-488e-9974-cdfb72840290');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-eab6bcab-21b0-4e8e-8756-93538b569b84\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eab6bcab-21b0-4e8e-8756-93538b569b84')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-eab6bcab-21b0-4e8e-8756-93538b569b84 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"clean_dataset"}},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["clean_dataset = clean_dataset[clean_dataset.canonical_smiles.notna()]\n","clean_dataset = clean_dataset.drop_duplicates(['canonical_smiles'])\n","clean_dataset"],"metadata":{"id":"armWvQ7BFlFg","colab":{"base_uri":"https://localhost:8080/","height":877},"executionInfo":{"status":"ok","timestamp":1708846058673,"user_tz":-480,"elapsed":30,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"a777eeba-da62-4bc6-cd18-7b680be68772"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             action_type activity_comment  \\\n","0                                                   None             None   \n","1                                                   None             None   \n","2                                                   None             None   \n","3                                                   None             None   \n","4                                                   None             None   \n","...                                                  ...              ...   \n","10614  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10615  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10616  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10617  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","10618  {'action_type': 'INHIBITOR', 'description': 'N...             None   \n","\n","       activity_id                                activity_properties  \\\n","0            78857                                                 []   \n","1           391560                                                 []   \n","2           391983                                                 []   \n","3           395858                                                 []   \n","4           395859                                                 []   \n","...            ...                                                ...   \n","10614     24890923  [{'comments': None, 'relation': '=', 'result_f...   \n","10615     24890924  [{'comments': None, 'relation': '=', 'result_f...   \n","10616     24890925  [{'comments': None, 'relation': '=', 'result_f...   \n","10617     24963344                                                 []   \n","10618     24963345                                                 []   \n","\n","      assay_chembl_id                                  assay_description  \\\n","0        CHEMBL653511  Inhibitory activity against Beta-secretase 1 w...   \n","1        CHEMBL653332  Compound was tested for its inhibitory activit...   \n","2        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","3        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","4        CHEMBL653512               Inhibition of human Beta-secretase 1   \n","...               ...                                                ...   \n","10614   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10615   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10616   CHEMBL5158468  Inhibition of BACE1 (unknown origin) using Mca...   \n","10617   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","10618   CHEMBL5216426  Inhibition of BACE1 (unknown origin) using A-b...   \n","\n","      assay_type assay_variant_accession assay_variant_mutation bao_endpoint  \\\n","0              B                    None                   None  BAO_0000190   \n","1              B                    None                   None  BAO_0000190   \n","2              B                    None                   None  BAO_0000190   \n","3              B                    None                   None  BAO_0000190   \n","4              B                    None                   None  BAO_0000190   \n","...          ...                     ...                    ...          ...   \n","10614          B                    None                   None  BAO_0000190   \n","10615          B                    None                   None  BAO_0000190   \n","10616          B                    None                   None  BAO_0000190   \n","10617          B                    None                   None  BAO_0000190   \n","10618          B                    None                   None  BAO_0000190   \n","\n","        bao_format              bao_label  \\\n","0      BAO_0000357  single protein format   \n","1      BAO_0000357  single protein format   \n","2      BAO_0000357  single protein format   \n","3      BAO_0000357  single protein format   \n","4      BAO_0000357  single protein format   \n","...            ...                    ...   \n","10614  BAO_0000357  single protein format   \n","10615  BAO_0000357  single protein format   \n","10616  BAO_0000357  single protein format   \n","10617  BAO_0000357  single protein format   \n","10618  BAO_0000357  single protein format   \n","\n","                                        canonical_smiles  \\\n","0      CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1      CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2      CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3      CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4      CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                                                  ...   \n","10614  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","10615  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10616  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10617      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","10618       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","      data_validity_comment data_validity_description document_chembl_id  \\\n","0                      None                      None      CHEMBL1136466   \n","1                      None                      None      CHEMBL1144938   \n","2                      None                      None      CHEMBL1147464   \n","3                      None                      None      CHEMBL1147464   \n","4                      None                      None      CHEMBL1147464   \n","...                     ...                       ...                ...   \n","10614                  None                      None      CHEMBL5154724   \n","10615                  None                      None      CHEMBL5154724   \n","10616                  None                      None      CHEMBL5154724   \n","10617                  None                      None      CHEMBL5214927   \n","10618                  None                      None      CHEMBL5214927   \n","\n","           document_journal  document_year  \\\n","0      Bioorg Med Chem Lett           2003   \n","1                J Med Chem           2003   \n","2      Bioorg Med Chem Lett           2004   \n","3      Bioorg Med Chem Lett           2004   \n","4      Bioorg Med Chem Lett           2004   \n","...                     ...            ...   \n","10614       Bioorg Med Chem           2022   \n","10615       Bioorg Med Chem           2022   \n","10616       Bioorg Med Chem           2022   \n","10617        Eur J Med Chem           2022   \n","10618        Eur J Med Chem           2022   \n","\n","                                       ligand_efficiency molecule_chembl_id  \\\n","0      {'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...       CHEMBL406146   \n","1      {'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...        CHEMBL78946   \n","2      {'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...       CHEMBL324109   \n","3      {'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...       CHEMBL114147   \n","4      {'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...       CHEMBL419949   \n","...                                                  ...                ...   \n","10614  {'bei': '5.78', 'le': None, 'lle': None, 'sei'...      CHEMBL5192597   \n","10615  {'bei': '1.97', 'le': None, 'lle': None, 'sei'...      CHEMBL5184180   \n","10616  {'bei': '1.99', 'le': None, 'lle': None, 'sei'...      CHEMBL5184529   \n","10617  {'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...      CHEMBL5220695   \n","10618  {'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...      CHEMBL5219239   \n","\n","                molecule_pref_name parent_molecule_chembl_id pchembl_value  \\\n","0      HGLUVALLEUPNSASPALAGLUPHEOH              CHEMBL406146          6.38   \n","1                             None               CHEMBL78946          8.70   \n","2                             None              CHEMBL324109          6.34   \n","3                             None              CHEMBL114147          5.05   \n","4                             None              CHEMBL419949          5.25   \n","...                            ...                       ...           ...   \n","10614                         None             CHEMBL5192597          6.11   \n","10615                         None             CHEMBL5184180          5.99   \n","10616                         None             CHEMBL5184529          6.08   \n","10617                         None             CHEMBL5220695          7.82   \n","10618                         None             CHEMBL5219239          7.81   \n","\n","       potential_duplicate                                 qudt_units  \\\n","0                        0  http://www.openphacts.org/units/Nanomolar   \n","1                        1  http://www.openphacts.org/units/Nanomolar   \n","2                        0  http://www.openphacts.org/units/Nanomolar   \n","3                        0  http://www.openphacts.org/units/Nanomolar   \n","4                        0  http://www.openphacts.org/units/Nanomolar   \n","...                    ...                                        ...   \n","10614                    0  http://www.openphacts.org/units/Nanomolar   \n","10615                    0  http://www.openphacts.org/units/Nanomolar   \n","10616                    0  http://www.openphacts.org/units/Nanomolar   \n","10617                    0  http://www.openphacts.org/units/Nanomolar   \n","10618                    0  http://www.openphacts.org/units/Nanomolar   \n","\n","       record_id relation  src_id  standard_flag standard_relation  \\\n","0         260010        =       1              1                 =   \n","1         274693        =       1              1                 =   \n","2         219979        =       1              1                 =   \n","3         219988        =       1              1                 =   \n","4         219982        =       1              1                 =   \n","...          ...      ...     ...            ...               ...   \n","10614    3890233        =       1              1                 =   \n","10615    3890234        =       1              1                 =   \n","10616    3890235        =       1              1                 =   \n","10617    3899833        =       1              1                 =   \n","10618    3899834        =       1              1                 =   \n","\n","      standard_text_value standard_type standard_units standard_upper_value  \\\n","0                    None          IC50             nM                 None   \n","1                    None          IC50             nM                 None   \n","2                    None          IC50             nM                 None   \n","3                    None          IC50             nM                 None   \n","4                    None          IC50             nM                 None   \n","...                   ...           ...            ...                  ...   \n","10614                None          IC50             nM                 None   \n","10615                None          IC50             nM                 None   \n","10616                None          IC50             nM                 None   \n","10617                None          IC50             nM                 None   \n","10618                None          IC50             nM                 None   \n","\n","      standard_value target_chembl_id target_organism  target_pref_name  \\\n","0              413.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","1                2.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","2              460.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","3             9000.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","4             5600.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","...              ...              ...             ...               ...   \n","10614          775.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10615         1031.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10616          828.0       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10617           15.1       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","10618           15.4       CHEMBL4822    Homo sapiens  Beta-secretase 1   \n","\n","      target_tax_id text_value  toid  type units    uo_units upper_value  \\\n","0              9606       None  None  IC50    nM  UO_0000065        None   \n","1              9606       None  None  IC50    uM  UO_0000065        None   \n","2              9606       None  None  IC50    uM  UO_0000065        None   \n","3              9606       None  None  IC50    uM  UO_0000065        None   \n","4              9606       None  None  IC50    uM  UO_0000065        None   \n","...             ...        ...   ...   ...   ...         ...         ...   \n","10614          9606       None  None  IC50    nM  UO_0000065        None   \n","10615          9606       None  None  IC50    nM  UO_0000065        None   \n","10616          9606       None  None  IC50    nM  UO_0000065        None   \n","10617          9606       None  None  IC50    nM  UO_0000065        None   \n","10618          9606       None  None  IC50    nM  UO_0000065        None   \n","\n","        value  \n","0       413.0  \n","1       0.002  \n","2        0.46  \n","3         9.0  \n","4         5.6  \n","...       ...  \n","10614   775.0  \n","10615  1031.0  \n","10616   828.0  \n","10617    15.1  \n","10618    15.4  \n","\n","[7353 rows x 46 columns]"],"text/html":["\n","  <div id=\"df-549bf27f-d5ce-4940-bf5f-d9fb190fab24\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>action_type</th>\n","      <th>activity_comment</th>\n","      <th>activity_id</th>\n","      <th>activity_properties</th>\n","      <th>assay_chembl_id</th>\n","      <th>assay_description</th>\n","      <th>assay_type</th>\n","      <th>assay_variant_accession</th>\n","      <th>assay_variant_mutation</th>\n","      <th>bao_endpoint</th>\n","      <th>bao_format</th>\n","      <th>bao_label</th>\n","      <th>canonical_smiles</th>\n","      <th>data_validity_comment</th>\n","      <th>data_validity_description</th>\n","      <th>document_chembl_id</th>\n","      <th>document_journal</th>\n","      <th>document_year</th>\n","      <th>ligand_efficiency</th>\n","      <th>molecule_chembl_id</th>\n","      <th>molecule_pref_name</th>\n","      <th>parent_molecule_chembl_id</th>\n","      <th>pchembl_value</th>\n","      <th>potential_duplicate</th>\n","      <th>qudt_units</th>\n","      <th>record_id</th>\n","      <th>relation</th>\n","      <th>src_id</th>\n","      <th>standard_flag</th>\n","      <th>standard_relation</th>\n","      <th>standard_text_value</th>\n","      <th>standard_type</th>\n","      <th>standard_units</th>\n","      <th>standard_upper_value</th>\n","      <th>standard_value</th>\n","      <th>target_chembl_id</th>\n","      <th>target_organism</th>\n","      <th>target_pref_name</th>\n","      <th>target_tax_id</th>\n","      <th>text_value</th>\n","      <th>toid</th>\n","      <th>type</th>\n","      <th>units</th>\n","      <th>uo_units</th>\n","      <th>upper_value</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>78857</td>\n","      <td>[]</td>\n","      <td>CHEMBL653511</td>\n","      <td>Inhibitory activity against Beta-secretase 1 w...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1136466</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2003</td>\n","      <td>{'bei': '6.39', 'le': '0.12', 'lle': '7.82', '...</td>\n","      <td>CHEMBL406146</td>\n","      <td>HGLUVALLEUPNSASPALAGLUPHEOH</td>\n","      <td>CHEMBL406146</td>\n","      <td>6.38</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>260010</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391560</td>\n","      <td>[]</td>\n","      <td>CHEMBL653332</td>\n","      <td>Compound was tested for its inhibitory activit...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1144938</td>\n","      <td>J Med Chem</td>\n","      <td>2003</td>\n","      <td>{'bei': '9.74', 'le': '0.19', 'lle': '10.44', ...</td>\n","      <td>CHEMBL78946</td>\n","      <td>None</td>\n","      <td>CHEMBL78946</td>\n","      <td>8.70</td>\n","      <td>1</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>274693</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>2.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.002</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>391983</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '8.43', 'le': '0.17', 'lle': '3.99', '...</td>\n","      <td>CHEMBL324109</td>\n","      <td>None</td>\n","      <td>CHEMBL324109</td>\n","      <td>6.34</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219979</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>460.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>0.46</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395858</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.84', 'le': '0.13', 'lle': '3.09', '...</td>\n","      <td>CHEMBL114147</td>\n","      <td>None</td>\n","      <td>CHEMBL114147</td>\n","      <td>5.05</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219988</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>9000.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>395859</td>\n","      <td>[]</td>\n","      <td>CHEMBL653512</td>\n","      <td>Inhibition of human Beta-secretase 1</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL1147464</td>\n","      <td>Bioorg Med Chem Lett</td>\n","      <td>2004</td>\n","      <td>{'bei': '6.34', 'le': '0.12', 'lle': '1.68', '...</td>\n","      <td>CHEMBL419949</td>\n","      <td>None</td>\n","      <td>CHEMBL419949</td>\n","      <td>5.25</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>219982</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>5600.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>uM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>5.6</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10614</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890923</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '5.78', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5192597</td>\n","      <td>None</td>\n","      <td>CHEMBL5192597</td>\n","      <td>6.11</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890233</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>775.0</td>\n","    </tr>\n","    <tr>\n","      <th>10615</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890924</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.97', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184180</td>\n","      <td>None</td>\n","      <td>CHEMBL5184180</td>\n","      <td>5.99</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890234</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>1031.0</td>\n","    </tr>\n","    <tr>\n","      <th>10616</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24890925</td>\n","      <td>[{'comments': None, 'relation': '=', 'result_f...</td>\n","      <td>CHEMBL5158468</td>\n","      <td>Inhibition of BACE1 (unknown origin) using Mca...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5154724</td>\n","      <td>Bioorg Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '1.99', 'le': None, 'lle': None, 'sei'...</td>\n","      <td>CHEMBL5184529</td>\n","      <td>None</td>\n","      <td>CHEMBL5184529</td>\n","      <td>6.08</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3890235</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>828.0</td>\n","    </tr>\n","    <tr>\n","      <th>10617</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963344</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '20.72', 'le': '0.40', 'lle': '4.47', ...</td>\n","      <td>CHEMBL5220695</td>\n","      <td>None</td>\n","      <td>CHEMBL5220695</td>\n","      <td>7.82</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899833</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>10618</th>\n","      <td>{'action_type': 'INHIBITOR', 'description': 'N...</td>\n","      <td>None</td>\n","      <td>24963345</td>\n","      <td>[]</td>\n","      <td>CHEMBL5216426</td>\n","      <td>Inhibition of BACE1 (unknown origin) using A-b...</td>\n","      <td>B</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>BAO_0000190</td>\n","      <td>BAO_0000357</td>\n","      <td>single protein format</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>CHEMBL5214927</td>\n","      <td>Eur J Med Chem</td>\n","      <td>2022</td>\n","      <td>{'bei': '19.95', 'le': '0.38', 'lle': '4.08', ...</td>\n","      <td>CHEMBL5219239</td>\n","      <td>None</td>\n","      <td>CHEMBL5219239</td>\n","      <td>7.81</td>\n","      <td>0</td>\n","      <td>http://www.openphacts.org/units/Nanomolar</td>\n","      <td>3899834</td>\n","      <td>=</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>=</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","      <td>CHEMBL4822</td>\n","      <td>Homo sapiens</td>\n","      <td>Beta-secretase 1</td>\n","      <td>9606</td>\n","      <td>None</td>\n","      <td>None</td>\n","      <td>IC50</td>\n","      <td>nM</td>\n","      <td>UO_0000065</td>\n","      <td>None</td>\n","      <td>15.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 46 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-549bf27f-d5ce-4940-bf5f-d9fb190fab24')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-549bf27f-d5ce-4940-bf5f-d9fb190fab24 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-549bf27f-d5ce-4940-bf5f-d9fb190fab24');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c46c0bd5-4156-4a0c-b868-b8f3a6783f09\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c46c0bd5-4156-4a0c-b868-b8f3a6783f09')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c46c0bd5-4156-4a0c-b868-b8f3a6783f09 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"clean_dataset"}},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["selection = ['molecule_chembl_id', 'canonical_smiles', 'standard_value']\n","preprocessed_dataset = clean_dataset[selection]\n","preprocessed_dataset"],"metadata":{"id":"gVaspF-NF9qM","colab":{"base_uri":"https://localhost:8080/","height":597},"executionInfo":{"status":"ok","timestamp":1708846058673,"user_tz":-480,"elapsed":27,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"90c249d6-8cc9-4e21-d52a-1907d5609482"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      molecule_chembl_id                                   canonical_smiles  \\\n","0           CHEMBL406146  CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1            CHEMBL78946  CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2           CHEMBL324109  CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3           CHEMBL114147  CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4           CHEMBL419949  CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                  ...                                                ...   \n","10614      CHEMBL5192597  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","10615      CHEMBL5184180  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10616      CHEMBL5184529  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","10617      CHEMBL5220695      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","10618      CHEMBL5219239       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","      standard_value  \n","0              413.0  \n","1                2.0  \n","2              460.0  \n","3             9000.0  \n","4             5600.0  \n","...              ...  \n","10614          775.0  \n","10615         1031.0  \n","10616          828.0  \n","10617           15.1  \n","10618           15.4  \n","\n","[7353 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-9e9b2444-e95a-4df1-9bf5-c87cf65f2ca7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>standard_value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>460.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>9000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>5600.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>10614</th>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>775.0</td>\n","    </tr>\n","    <tr>\n","      <th>10615</th>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>1031.0</td>\n","    </tr>\n","    <tr>\n","      <th>10616</th>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>828.0</td>\n","    </tr>\n","    <tr>\n","      <th>10617</th>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>10618</th>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>15.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e9b2444-e95a-4df1-9bf5-c87cf65f2ca7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e9b2444-e95a-4df1-9bf5-c87cf65f2ca7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e9b2444-e95a-4df1-9bf5-c87cf65f2ca7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d56bdc02-bd51-42dc-a723-745a952c927a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d56bdc02-bd51-42dc-a723-745a952c927a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d56bdc02-bd51-42dc-a723-745a952c927a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"preprocessed_dataset","summary":"{\n  \"name\": \"preprocessed_dataset\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"molecule_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"CHEMBL3691381\",\n          \"CHEMBL473159\",\n          \"CHEMBL3952727\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"canonical_smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"C[C@H]1SC(N)=N[C@@]2(c3cc(-c4cncnc4)ccc3F)COCC[C@@H]12\",\n          \"Oc1cc(O)cc(O)c1\",\n          \"Cc1cc(Cl)cnc1C(=S)Nc1ccc(F)c([C@]2(CF)C[C@@H](C(F)(F)F)OC(N)=N2)c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"standard_value\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2311,\n        \"samples\": [\n          \"81.1\",\n          \"950.0\",\n          \"7.2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["preprocessed_dataset.to_csv('02_bace1_preprocessed_bioactivity_data.csv', index=False)"],"metadata":{"id":"u5otrTjEHfux"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Data Labeling"],"metadata":{"id":"LJecEH6rIb4p"}},{"cell_type":"code","source":["bioactivity_threshold = []\n","for i in preprocessed_dataset.standard_value:\n","  if float(i) >= 1000:\n","    bioactivity_threshold.append('inactive')\n","  elif float(i) <= 1000:\n","    bioactivity_threshold.append('active')"],"metadata":{"id":"6o-5MtaOIZLo","executionInfo":{"status":"ok","timestamp":1708846058674,"user_tz":-480,"elapsed":26,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["mol_cid = []\n","for i in preprocessed_dataset.molecule_chembl_id:\n","  mol_cid.append(i)"],"metadata":{"id":"40MMDYoMKZn7","executionInfo":{"status":"ok","timestamp":1708846058674,"user_tz":-480,"elapsed":26,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["## Iterate canonical_smiles to a list\n","canonical_smiles = []\n","for i in preprocessed_dataset.canonical_smiles:\n","  canonical_smiles.append(i)"],"metadata":{"id":"jPN2PagvKipu","executionInfo":{"status":"ok","timestamp":1708846059373,"user_tz":-480,"elapsed":18,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["## Iterate standard_value to a list\n","standard_value = []\n","for i in preprocessed_dataset.standard_value:\n","  standard_value.append(i)"],"metadata":{"id":"MEqFMCnRKoMl","executionInfo":{"status":"ok","timestamp":1708846059374,"user_tz":-480,"elapsed":19,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["data_tuples = list(zip(mol_cid, canonical_smiles, standard_value, bioactivity_threshold))\n","labeled_dataset = pd.DataFrame(data_tuples, columns=['molecule_chembl_id', 'canonical_smiles', 'standard_value', 'bioactivity_class'])\n","labeled_dataset"],"metadata":{"id":"v1kK6j21KsQX","colab":{"base_uri":"https://localhost:8080/","height":617},"executionInfo":{"status":"ok","timestamp":1708846059375,"user_tz":-480,"elapsed":19,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"bc7f946a-6e7d-4888-e97c-4f80fa8759df"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL406146  CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1           CHEMBL78946  CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2          CHEMBL324109  CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3          CHEMBL114147  CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4          CHEMBL419949  CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                 ...                                                ...   \n","7348      CHEMBL5192597  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","7349      CHEMBL5184180  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7350      CHEMBL5184529  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7351      CHEMBL5220695      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","7352      CHEMBL5219239       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","     standard_value bioactivity_class  \n","0             413.0            active  \n","1               2.0            active  \n","2             460.0            active  \n","3            9000.0          inactive  \n","4            5600.0          inactive  \n","...             ...               ...  \n","7348          775.0            active  \n","7349         1031.0          inactive  \n","7350          828.0            active  \n","7351           15.1            active  \n","7352           15.4            active  \n","\n","[7353 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-5616e416-8157-4f18-a0ad-02f695c3d793\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>standard_value</th>\n","      <th>bioactivity_class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>413.0</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>2.0</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>460.0</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>9000.0</td>\n","      <td>inactive</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>5600.0</td>\n","      <td>inactive</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>775.0</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>1031.0</td>\n","      <td>inactive</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>828.0</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>15.1</td>\n","      <td>active</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>15.4</td>\n","      <td>active</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5616e416-8157-4f18-a0ad-02f695c3d793')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5616e416-8157-4f18-a0ad-02f695c3d793 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5616e416-8157-4f18-a0ad-02f695c3d793');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b8118428-d3a4-4f6b-82ca-ede72fd4cfc0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b8118428-d3a4-4f6b-82ca-ede72fd4cfc0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b8118428-d3a4-4f6b-82ca-ede72fd4cfc0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"labeled_dataset","summary":"{\n  \"name\": \"labeled_dataset\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"molecule_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"CHEMBL3691381\",\n          \"CHEMBL473159\",\n          \"CHEMBL3952727\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"canonical_smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"C[C@H]1SC(N)=N[C@@]2(c3cc(-c4cncnc4)ccc3F)COCC[C@@H]12\",\n          \"Oc1cc(O)cc(O)c1\",\n          \"Cc1cc(Cl)cnc1C(=S)Nc1ccc(F)c([C@]2(CF)C[C@@H](C(F)(F)F)OC(N)=N2)c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"standard_value\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2311,\n        \"samples\": [\n          \"81.1\",\n          \"950.0\",\n          \"7.2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bioactivity_class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"inactive\",\n          \"active\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["# Count the number of active and inactive compounds\n","active_count = labeled_dataset[labeled_dataset['bioactivity_class'] == 'active'].shape[0]\n","inactive_count = labeled_dataset[labeled_dataset['bioactivity_class'] == 'inactive'].shape[0]\n","\n","# Print the counts\n","print(\"Number of Active Compounds:\", active_count)\n","print(\"Number of Inactive Compounds:\", inactive_count)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fYPRhTxbsyGw","executionInfo":{"status":"ok","timestamp":1708846059376,"user_tz":-480,"elapsed":18,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"5c524096-0d15-4229-e7c5-5d5d797e995d"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of Active Compounds: 4617\n","Number of Inactive Compounds: 2736\n"]}]},{"cell_type":"code","source":["labeled_dataset.to_csv('03_bace1_labeled_bioactivity_data.csv', index=False)"],"metadata":{"id":"uMkWodNbLWR6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Lipinski Descriptor Calculation"],"metadata":{"id":"s89OVpXKKnAO"}},{"cell_type":"code","source":["def lipinski(smiles, verbose=False):\n","    moldata = []\n","    for elem in smiles:\n","        mol = Chem.MolFromSmiles(elem)\n","        moldata.append(mol)\n","    baseData = np.arange(1, 1)\n","    i = 0\n","    for mol in moldata:\n","\n","        desc_MolWt = Descriptors.MolWt(mol)\n","        desc_MolLogP = Descriptors.MolLogP(mol)\n","        desc_NumHDonors = Lipinski.NumHDonors(mol)\n","        desc_NumHAcceptors = Lipinski.NumHAcceptors(mol)\n","\n","        row = np.array([desc_MolWt,\n","                        desc_MolLogP,\n","                        desc_NumHDonors,\n","                        desc_NumHAcceptors])\n","        if (i==0):\n","            baseData = row\n","        else:\n","            baseData = np.vstack([baseData, row])\n","        i = i + 1\n","\n","    columnNames =  [\"MW\", \"LogP\", \"NumHDonors\", \"NumHAcceptors\"]\n","    descriptors = pd.DataFrame(data=baseData, columns=columnNames)\n","    return descriptors"],"metadata":{"id":"sQ7uK-vBNC7e","executionInfo":{"status":"ok","timestamp":1708846059377,"user_tz":-480,"elapsed":14,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["lipinski_descriptor = lipinski(labeled_dataset.canonical_smiles)\n","lipinski_descriptor"],"metadata":{"id":"c28y6wgFNiST","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1708846068444,"user_tz":-480,"elapsed":9080,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"1f3a8693-9b40-4b12-b7fb-ec34d0fad631"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            MW    LogP  NumHDonors  NumHAcceptors\n","0      999.085 -1.4355        13.0           13.0\n","1      893.005 -1.7361        12.0           12.0\n","2      751.988  2.3535         8.0            9.0\n","3      737.895  1.9626         8.0            8.0\n","4      828.020  3.5739         8.0            8.0\n","...        ...     ...         ...            ...\n","7348  1057.256  2.4833         7.0           13.0\n","7349  3036.578  2.0591        26.0           43.0\n","7350  3052.577  1.7647        27.0           44.0\n","7351   377.485  3.3450         3.0            5.0\n","7352   391.512  3.7335         3.0            5.0\n","\n","[7353 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-1e00b93b-a95a-4061-811e-b9836df365c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MW</th>\n","      <th>LogP</th>\n","      <th>NumHDonors</th>\n","      <th>NumHAcceptors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>999.085</td>\n","      <td>-1.4355</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>893.005</td>\n","      <td>-1.7361</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>751.988</td>\n","      <td>2.3535</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>737.895</td>\n","      <td>1.9626</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>828.020</td>\n","      <td>3.5739</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>1057.256</td>\n","      <td>2.4833</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>3036.578</td>\n","      <td>2.0591</td>\n","      <td>26.0</td>\n","      <td>43.0</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>3052.577</td>\n","      <td>1.7647</td>\n","      <td>27.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>377.485</td>\n","      <td>3.3450</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>391.512</td>\n","      <td>3.7335</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e00b93b-a95a-4061-811e-b9836df365c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1e00b93b-a95a-4061-811e-b9836df365c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1e00b93b-a95a-4061-811e-b9836df365c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4ac8ddeb-4ae7-4230-8ad7-f3ac85c09b19\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ac8ddeb-4ae7-4230-8ad7-f3ac85c09b19')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4ac8ddeb-4ae7-4230-8ad7-f3ac85c09b19 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"lipinski_descriptor","summary":"{\n  \"name\": \"lipinski_descriptor\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"MW\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.91640689697692,\n        \"min\": 126.11099999999996,\n        \"max\": 3052.5769999999957,\n        \"num_unique_values\": 5763,\n        \"samples\": [\n          468.9600000000003,\n          405.54200000000026,\n          592.8060000000003\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LogP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.608063107477071,\n        \"min\": -12.67449999999992,\n        \"max\": 13.29659999999997,\n        \"num_unique_values\": 6141,\n        \"samples\": [\n          4.638600000000004,\n          3.076500000000002,\n          3.8236000000000017\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHDonors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3723182345570093,\n        \"min\": 0.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          9.0,\n          34.0,\n          13.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHAcceptors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3729374412828506,\n        \"min\": 1.0,\n        \"max\": 44.0,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          6.0,\n          25.0,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["lipinski_dataset = pd.concat([labeled_dataset, lipinski_descriptor], axis = 1)\n","lipinski_dataset"],"metadata":{"id":"6X1_ODVEN4Om","colab":{"base_uri":"https://localhost:8080/","height":617},"executionInfo":{"status":"ok","timestamp":1708846068445,"user_tz":-480,"elapsed":22,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"a2dafb1b-b580-4748-e0dd-fca0fc60480e"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL406146  CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1           CHEMBL78946  CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2          CHEMBL324109  CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3          CHEMBL114147  CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4          CHEMBL419949  CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                 ...                                                ...   \n","7348      CHEMBL5192597  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","7349      CHEMBL5184180  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7350      CHEMBL5184529  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7351      CHEMBL5220695      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","7352      CHEMBL5219239       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","     standard_value bioactivity_class        MW    LogP  NumHDonors  \\\n","0             413.0            active   999.085 -1.4355        13.0   \n","1               2.0            active   893.005 -1.7361        12.0   \n","2             460.0            active   751.988  2.3535         8.0   \n","3            9000.0          inactive   737.895  1.9626         8.0   \n","4            5600.0          inactive   828.020  3.5739         8.0   \n","...             ...               ...       ...     ...         ...   \n","7348          775.0            active  1057.256  2.4833         7.0   \n","7349         1031.0          inactive  3036.578  2.0591        26.0   \n","7350          828.0            active  3052.577  1.7647        27.0   \n","7351           15.1            active   377.485  3.3450         3.0   \n","7352           15.4            active   391.512  3.7335         3.0   \n","\n","      NumHAcceptors  \n","0              13.0  \n","1              12.0  \n","2               9.0  \n","3               8.0  \n","4               8.0  \n","...             ...  \n","7348           13.0  \n","7349           43.0  \n","7350           44.0  \n","7351            5.0  \n","7352            5.0  \n","\n","[7353 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-6d29c7f6-5068-4bd1-b8cb-22c298957a71\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>standard_value</th>\n","      <th>bioactivity_class</th>\n","      <th>MW</th>\n","      <th>LogP</th>\n","      <th>NumHDonors</th>\n","      <th>NumHAcceptors</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>413.0</td>\n","      <td>active</td>\n","      <td>999.085</td>\n","      <td>-1.4355</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>2.0</td>\n","      <td>active</td>\n","      <td>893.005</td>\n","      <td>-1.7361</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>460.0</td>\n","      <td>active</td>\n","      <td>751.988</td>\n","      <td>2.3535</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>9000.0</td>\n","      <td>inactive</td>\n","      <td>737.895</td>\n","      <td>1.9626</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>5600.0</td>\n","      <td>inactive</td>\n","      <td>828.020</td>\n","      <td>3.5739</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>775.0</td>\n","      <td>active</td>\n","      <td>1057.256</td>\n","      <td>2.4833</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>1031.0</td>\n","      <td>inactive</td>\n","      <td>3036.578</td>\n","      <td>2.0591</td>\n","      <td>26.0</td>\n","      <td>43.0</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>828.0</td>\n","      <td>active</td>\n","      <td>3052.577</td>\n","      <td>1.7647</td>\n","      <td>27.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>15.1</td>\n","      <td>active</td>\n","      <td>377.485</td>\n","      <td>3.3450</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>15.4</td>\n","      <td>active</td>\n","      <td>391.512</td>\n","      <td>3.7335</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d29c7f6-5068-4bd1-b8cb-22c298957a71')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6d29c7f6-5068-4bd1-b8cb-22c298957a71 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6d29c7f6-5068-4bd1-b8cb-22c298957a71');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a299da1d-ebaf-4dbe-abc9-70a3b29c9b8a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a299da1d-ebaf-4dbe-abc9-70a3b29c9b8a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a299da1d-ebaf-4dbe-abc9-70a3b29c9b8a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"lipinski_dataset","summary":"{\n  \"name\": \"lipinski_dataset\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"molecule_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"CHEMBL3691381\",\n          \"CHEMBL473159\",\n          \"CHEMBL3952727\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"canonical_smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"C[C@H]1SC(N)=N[C@@]2(c3cc(-c4cncnc4)ccc3F)COCC[C@@H]12\",\n          \"Oc1cc(O)cc(O)c1\",\n          \"Cc1cc(Cl)cnc1C(=S)Nc1ccc(F)c([C@]2(CF)C[C@@H](C(F)(F)F)OC(N)=N2)c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"standard_value\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2311,\n        \"samples\": [\n          \"81.1\",\n          \"950.0\",\n          \"7.2\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bioactivity_class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"inactive\",\n          \"active\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MW\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.91640689697692,\n        \"min\": 126.11099999999996,\n        \"max\": 3052.5769999999957,\n        \"num_unique_values\": 5763,\n        \"samples\": [\n          468.9600000000003,\n          405.54200000000026\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LogP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.608063107477071,\n        \"min\": -12.67449999999992,\n        \"max\": 13.29659999999997,\n        \"num_unique_values\": 6141,\n        \"samples\": [\n          4.638600000000004,\n          3.076500000000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHDonors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3723182345570093,\n        \"min\": 0.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          9.0,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHAcceptors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3729374412828506,\n        \"min\": 1.0,\n        \"max\": 44.0,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          6.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["##Standardizing IC50"],"metadata":{"id":"HFN9-kmIUajW"}},{"cell_type":"code","source":["def norm_value(input):\n","    norm = []\n","\n","    for i in input['standard_value']:\n","        # Convert the value to a numeric type\n","        i = pd.to_numeric(i, errors='coerce')\n","\n","        if i > 100000000:\n","            i = 100000000\n","        norm.append(i)\n","\n","    input['standard_value_norm'] = norm\n","    x = input.drop('standard_value', 1)\n","\n","    return x"],"metadata":{"id":"Taq9y7hvUfL3","executionInfo":{"status":"ok","timestamp":1708846260717,"user_tz":-480,"elapsed":364,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["normalized_dataset = norm_value(lipinski_dataset)\n","normalized_dataset"],"metadata":{"id":"MXzK1wPgUk1F","colab":{"base_uri":"https://localhost:8080/","height":652},"executionInfo":{"status":"ok","timestamp":1708846264356,"user_tz":-480,"elapsed":1149,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"d7dc5313-fefc-4114-9624-f6dae7a12a4d"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-32-d6f766822eb0>:13: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  x = input.drop('standard_value', 1)\n"]},{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL406146  CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1           CHEMBL78946  CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2          CHEMBL324109  CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3          CHEMBL114147  CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4          CHEMBL419949  CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                 ...                                                ...   \n","7348      CHEMBL5192597  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","7349      CHEMBL5184180  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7350      CHEMBL5184529  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7351      CHEMBL5220695      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","7352      CHEMBL5219239       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","     bioactivity_class        MW    LogP  NumHDonors  NumHAcceptors  \\\n","0               active   999.085 -1.4355        13.0           13.0   \n","1               active   893.005 -1.7361        12.0           12.0   \n","2               active   751.988  2.3535         8.0            9.0   \n","3             inactive   737.895  1.9626         8.0            8.0   \n","4             inactive   828.020  3.5739         8.0            8.0   \n","...                ...       ...     ...         ...            ...   \n","7348            active  1057.256  2.4833         7.0           13.0   \n","7349          inactive  3036.578  2.0591        26.0           43.0   \n","7350            active  3052.577  1.7647        27.0           44.0   \n","7351            active   377.485  3.3450         3.0            5.0   \n","7352            active   391.512  3.7335         3.0            5.0   \n","\n","      standard_value_norm  \n","0                   413.0  \n","1                     2.0  \n","2                   460.0  \n","3                  9000.0  \n","4                  5600.0  \n","...                   ...  \n","7348                775.0  \n","7349               1031.0  \n","7350                828.0  \n","7351                 15.1  \n","7352                 15.4  \n","\n","[7353 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-9215e99e-f3b1-425e-8917-3fd2d3827100\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>bioactivity_class</th>\n","      <th>MW</th>\n","      <th>LogP</th>\n","      <th>NumHDonors</th>\n","      <th>NumHAcceptors</th>\n","      <th>standard_value_norm</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>active</td>\n","      <td>999.085</td>\n","      <td>-1.4355</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>413.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>active</td>\n","      <td>893.005</td>\n","      <td>-1.7361</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>active</td>\n","      <td>751.988</td>\n","      <td>2.3535</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>460.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>inactive</td>\n","      <td>737.895</td>\n","      <td>1.9626</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>9000.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>inactive</td>\n","      <td>828.020</td>\n","      <td>3.5739</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>5600.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>active</td>\n","      <td>1057.256</td>\n","      <td>2.4833</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","      <td>775.0</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>inactive</td>\n","      <td>3036.578</td>\n","      <td>2.0591</td>\n","      <td>26.0</td>\n","      <td>43.0</td>\n","      <td>1031.0</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>active</td>\n","      <td>3052.577</td>\n","      <td>1.7647</td>\n","      <td>27.0</td>\n","      <td>44.0</td>\n","      <td>828.0</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>active</td>\n","      <td>377.485</td>\n","      <td>3.3450</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>15.1</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>active</td>\n","      <td>391.512</td>\n","      <td>3.7335</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>15.4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9215e99e-f3b1-425e-8917-3fd2d3827100')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9215e99e-f3b1-425e-8917-3fd2d3827100 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9215e99e-f3b1-425e-8917-3fd2d3827100');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-800f8b6e-a7bc-4452-8715-5c98391f3cc9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-800f8b6e-a7bc-4452-8715-5c98391f3cc9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-800f8b6e-a7bc-4452-8715-5c98391f3cc9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"normalized_dataset","summary":"{\n  \"name\": \"normalized_dataset\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"molecule_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"CHEMBL3691381\",\n          \"CHEMBL473159\",\n          \"CHEMBL3952727\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"canonical_smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"C[C@H]1SC(N)=N[C@@]2(c3cc(-c4cncnc4)ccc3F)COCC[C@@H]12\",\n          \"Oc1cc(O)cc(O)c1\",\n          \"Cc1cc(Cl)cnc1C(=S)Nc1ccc(F)c([C@]2(CF)C[C@@H](C(F)(F)F)OC(N)=N2)c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bioactivity_class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"inactive\",\n          \"active\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MW\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.91640689697692,\n        \"min\": 126.11099999999996,\n        \"max\": 3052.5769999999957,\n        \"num_unique_values\": 5763,\n        \"samples\": [\n          468.9600000000003,\n          405.54200000000026\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LogP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.608063107477071,\n        \"min\": -12.67449999999992,\n        \"max\": 13.29659999999997,\n        \"num_unique_values\": 6141,\n        \"samples\": [\n          4.638600000000004,\n          3.076500000000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHDonors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3723182345570093,\n        \"min\": 0.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          9.0,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHAcceptors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3729374412828506,\n        \"min\": 1.0,\n        \"max\": 44.0,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          6.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"standard_value_norm\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1105715.2235503034,\n        \"min\": 0.0002,\n        \"max\": 86000000.0,\n        \"num_unique_values\": 2311,\n        \"samples\": [\n          81.1,\n          950.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["def pIC50(input):\n","    pIC50 = []\n","\n","    for i in input['standard_value_norm']:\n","        molar = i*(10**-9) # Converts nM to M\n","        pIC50.append(-np.log10(molar))\n","\n","    input['pIC50'] = pIC50\n","    x = input.drop('standard_value_norm', 1)\n","\n","    return x"],"metadata":{"id":"oBRPX3q7U9w3","executionInfo":{"status":"ok","timestamp":1708846301302,"user_tz":-480,"elapsed":374,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["pIC50_dataset = pIC50(normalized_dataset)\n","pIC50_dataset"],"metadata":{"id":"k3t5WbY1VEBl","colab":{"base_uri":"https://localhost:8080/","height":652},"executionInfo":{"status":"ok","timestamp":1708846302957,"user_tz":-480,"elapsed":10,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"64210263-4f2f-4555-d7b7-aa2c9af6ac7c"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-34-9cb5456a9c00>:9: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.\n","  x = input.drop('standard_value_norm', 1)\n"]},{"output_type":"execute_result","data":{"text/plain":["     molecule_chembl_id                                   canonical_smiles  \\\n","0          CHEMBL406146  CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...   \n","1           CHEMBL78946  CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...   \n","2          CHEMBL324109  CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...   \n","3          CHEMBL114147  CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...   \n","4          CHEMBL419949  CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...   \n","...                 ...                                                ...   \n","7348      CHEMBL5192597  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...   \n","7349      CHEMBL5184180  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7350      CHEMBL5184529  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...   \n","7351      CHEMBL5220695      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1   \n","7352      CHEMBL5219239       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O   \n","\n","     bioactivity_class        MW    LogP  NumHDonors  NumHAcceptors     pIC50  \n","0               active   999.085 -1.4355        13.0           13.0  6.384050  \n","1               active   893.005 -1.7361        12.0           12.0  8.698970  \n","2               active   751.988  2.3535         8.0            9.0  6.337242  \n","3             inactive   737.895  1.9626         8.0            8.0  5.045757  \n","4             inactive   828.020  3.5739         8.0            8.0  5.251812  \n","...                ...       ...     ...         ...            ...       ...  \n","7348            active  1057.256  2.4833         7.0           13.0  6.110698  \n","7349          inactive  3036.578  2.0591        26.0           43.0  5.986741  \n","7350            active  3052.577  1.7647        27.0           44.0  6.081970  \n","7351            active   377.485  3.3450         3.0            5.0  7.821023  \n","7352            active   391.512  3.7335         3.0            5.0  7.812479  \n","\n","[7353 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-2608d535-d614-4309-89e5-2a94be29d67f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>bioactivity_class</th>\n","      <th>MW</th>\n","      <th>LogP</th>\n","      <th>NumHDonors</th>\n","      <th>NumHAcceptors</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>active</td>\n","      <td>999.085</td>\n","      <td>-1.4355</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>6.384050</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>active</td>\n","      <td>893.005</td>\n","      <td>-1.7361</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","      <td>8.698970</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>active</td>\n","      <td>751.988</td>\n","      <td>2.3535</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>6.337242</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>inactive</td>\n","      <td>737.895</td>\n","      <td>1.9626</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>5.045757</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>inactive</td>\n","      <td>828.020</td>\n","      <td>3.5739</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>5.251812</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>active</td>\n","      <td>1057.256</td>\n","      <td>2.4833</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","      <td>6.110698</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>inactive</td>\n","      <td>3036.578</td>\n","      <td>2.0591</td>\n","      <td>26.0</td>\n","      <td>43.0</td>\n","      <td>5.986741</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>active</td>\n","      <td>3052.577</td>\n","      <td>1.7647</td>\n","      <td>27.0</td>\n","      <td>44.0</td>\n","      <td>6.081970</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>active</td>\n","      <td>377.485</td>\n","      <td>3.3450</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>7.821023</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>active</td>\n","      <td>391.512</td>\n","      <td>3.7335</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>7.812479</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2608d535-d614-4309-89e5-2a94be29d67f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2608d535-d614-4309-89e5-2a94be29d67f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2608d535-d614-4309-89e5-2a94be29d67f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-71ca1a48-728f-4303-85a3-4c019547b409\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71ca1a48-728f-4303-85a3-4c019547b409')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-71ca1a48-728f-4303-85a3-4c019547b409 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"pIC50_dataset","summary":"{\n  \"name\": \"pIC50_dataset\",\n  \"rows\": 7353,\n  \"fields\": [\n    {\n      \"column\": \"molecule_chembl_id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"CHEMBL3691381\",\n          \"CHEMBL473159\",\n          \"CHEMBL3952727\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"canonical_smiles\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 7353,\n        \"samples\": [\n          \"C[C@H]1SC(N)=N[C@@]2(c3cc(-c4cncnc4)ccc3F)COCC[C@@H]12\",\n          \"Oc1cc(O)cc(O)c1\",\n          \"Cc1cc(Cl)cnc1C(=S)Nc1ccc(F)c([C@]2(CF)C[C@@H](C(F)(F)F)OC(N)=N2)c1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"bioactivity_class\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"inactive\",\n          \"active\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"MW\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150.91640689697692,\n        \"min\": 126.11099999999996,\n        \"max\": 3052.5769999999957,\n        \"num_unique_values\": 5763,\n        \"samples\": [\n          468.9600000000003,\n          405.54200000000026\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"LogP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.608063107477071,\n        \"min\": -12.67449999999992,\n        \"max\": 13.29659999999997,\n        \"num_unique_values\": 6141,\n        \"samples\": [\n          4.638600000000004,\n          3.076500000000002\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHDonors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3723182345570093,\n        \"min\": 0.0,\n        \"max\": 34.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          9.0,\n          34.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NumHAcceptors\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.3729374412828506,\n        \"min\": 1.0,\n        \"max\": 44.0,\n        \"num_unique_values\": 27,\n        \"samples\": [\n          6.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pIC50\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3996072785337024,\n        \"min\": 1.0655015487564323,\n        \"max\": 12.698970004336019,\n        \"num_unique_values\": 2311,\n        \"samples\": [\n          7.090979145788844,\n          6.022276394711152\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["pIC50_dataset.to_csv('04_bioactvity_pIC50.csv')"],"metadata":{"id":"cWpIpdwZWKIS","colab":{"base_uri":"https://localhost:8080/","height":141},"executionInfo":{"status":"error","timestamp":1708081144716,"user_tz":-480,"elapsed":386,"user":{"displayName":"Kim Nicole Samson","userId":"05855814341150951331"}},"outputId":"b656a323-f062-4388-9c40-12d48457f4a1"},"execution_count":null,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'pIC50_dataset' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-59f326c678f4>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mpIC50_dataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'04_bioactvity_pIC50.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'pIC50_dataset' is not defined"]}]},{"cell_type":"code","source":["pIC50_dataset.pIC50.describe()"],"metadata":{"id":"COCMowOdeTCb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708846310947,"user_tz":-480,"elapsed":375,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"4f2f2147-5c64-48b3-eea2-a5b35c95e2ee"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count    7353.000000\n","mean        6.483156\n","std         1.399607\n","min         1.065502\n","25%         5.481486\n","50%         6.586700\n","75%         7.545155\n","max        12.698970\n","Name: pIC50, dtype: float64"]},"metadata":{},"execution_count":36}]},{"cell_type":"markdown","source":["##Exploratory data analysis"],"metadata":{"id":"jo0aUaV4WTev"}},{"cell_type":"code","source":["palette = [\"#27187eff\", \"#FF7200\"]\n","sns.set_palette(palette)"],"metadata":{"id":"AYMXoTvS4Uf4","executionInfo":{"status":"ok","timestamp":1708846317080,"user_tz":-480,"elapsed":536,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["sns.set(style=\"ticks\")\n","plt.figure(figsize=(5.5, 5.5))\n","sns.countplot(x='bioactivity_class', data=pIC50_dataset, edgecolor='black', hue=\"bioactivity_class\", alpha=1, palette=palette)\n","\n","plt.xlabel('Bioactivity Class', fontsize=12, fontweight='bold')\n","plt.ylabel('Frequency', fontsize=12, fontweight='bold')\n","plt.title('Bioactivity Class Distribution', fontsize=14, fontweight='bold', y=1.03)\n","\n","plt.savefig('plot_bioactivity_class.pdf', bbox_inches='tight')\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":548},"id":"YKz-BSX_0JYI","executionInfo":{"status":"ok","timestamp":1708846331573,"user_tz":-480,"elapsed":1551,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"bc7124c5-f27d-471a-85c3-9472d08a493e"},"execution_count":38,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["## Scatter plot of MW versus LogP\n","plt.figure(figsize=(5.5, 5.5))\n","\n","sns.scatterplot(x='MW', y='LogP', data= pIC50_dataset, hue='bioactivity_class', edgecolor='black', alpha=0.7, palette=palette)\n","\n","plt.xlabel('MW', fontsize=14, fontweight='bold')\n","plt.ylabel('LogP', fontsize=14, fontweight='bold')\n","plt.legend(loc='upper right', bbox_to_anchor=(0.98, 0.98), borderaxespad=0)\n","plt.savefig('plot_MW_vs_LogP.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"77GJQ8uG2Zr-","executionInfo":{"status":"ok","timestamp":1708846333811,"user_tz":-480,"elapsed":2247,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"a4412860-3bc3-4d0e-dfb7-21aaac3b1a02"},"execution_count":39,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def mannwhitney(descriptor, verbose=False):\n","    from numpy.random import seed\n","    from numpy.random import randn\n","    from scipy.stats import mannwhitneyu\n","\n","    # seed the random number generator\n","    seed(1)\n","\n","    # actives and inactives\n","    selection = [descriptor, 'bioactivity_class']\n","    df = pIC50_dataset[selection]\n","    active = df[df['bioactivity_class'] == 'active']\n","    active = active[descriptor]\n","\n","    selection = [descriptor, 'bioactivity_class']\n","    df = pIC50_dataset[selection]\n","    inactive = df[df['bioactivity_class'] == 'inactive']\n","    inactive = inactive[descriptor]\n","\n","    # compare samples\n","    stat, p = mannwhitneyu(active, inactive)\n","\n","    # interpret\n","    alpha = 0.05\n","    if p > alpha:\n","        interpretation = 'Same distribution (fail to reject H0)'\n","    else:\n","        interpretation = 'Different distribution (reject H0)'\n","\n","    # Get the data points within the boxes and outliers\n","    box_data = df[df[descriptor].between(df[descriptor].quantile(0.25), df[descriptor].quantile(0.75))]\n","    outlier_data = df[~df[descriptor].between(df[descriptor].quantile(0.25), df[descriptor].quantile(0.75))]\n","\n","    # Count bioactivity class occurrences within the boxes and outliers\n","    active_count_in_box = box_data[box_data['bioactivity_class'] == 'active'].shape[0]\n","    inactive_count_in_box = box_data[box_data['bioactivity_class'] == 'inactive'].shape[0]\n","\n","    active_count_outliers = outlier_data[outlier_data['bioactivity_class'] == 'active'].shape[0]\n","    inactive_count_outliers = outlier_data[outlier_data['bioactivity_class'] == 'inactive'].shape[0]\n","\n","    results = pd.DataFrame({'Descriptor': descriptor,\n","                            'Statistics': stat,\n","                            'p': p,\n","                            'alpha': alpha,\n","                            'Interpretation': interpretation,\n","                            'Active Count (in box)': active_count_in_box,\n","                            'Inactive Count (in box)': inactive_count_in_box,\n","                            'Active Count (outliers)': active_count_outliers,\n","                            'Inactive Count (outliers)': inactive_count_outliers}, index=[0])\n","\n","    filename = 'mannwhitneyu_' + descriptor + '.csv'\n","    results.to_csv(filename)\n","\n","    return results"],"metadata":{"id":"WmOwo97Zv6AI","executionInfo":{"status":"ok","timestamp":1708846840053,"user_tz":-480,"elapsed":386,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(5.5, 5.5))\n","\n","sns.boxplot(x = 'bioactivity_class', y = 'pIC50', data = pIC50_dataset, hue=\"bioactivity_class\", palette=palette)\n","\n","plt.xlabel('Bioactivity class', fontsize=14, fontweight='bold')\n","plt.ylabel('pIC50 value', fontsize=14, fontweight='bold')\n","\n","plt.savefig('plot_ic50.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"BmBg_Gqw10CC","executionInfo":{"status":"ok","timestamp":1708846843514,"user_tz":-480,"elapsed":1064,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"b3f9957e-1785-42a0-edf7-da8c14c66ee7"},"execution_count":65,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mannwhitney('pIC50')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"xUvuzI_F4sC_","executionInfo":{"status":"ok","timestamp":1708846845202,"user_tz":-480,"elapsed":554,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"ec2bf077-cf13-4f5f-949f-229f53244e5a"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Descriptor  Statistics    p  alpha                      Interpretation  \\\n","0      pIC50  12632112.0  0.0   0.05  Different distribution (reject H0)   \n","\n","   Active Count (in box)  Inactive Count (in box)  Active Count (outliers)  \\\n","0                   2779                      903                     1838   \n","\n","   Inactive Count (outliers)  \n","0                       1833  "],"text/html":["\n","  <div id=\"df-f74d4249-8f39-46a2-a244-83545c1aaf96\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Descriptor</th>\n","      <th>Statistics</th>\n","      <th>p</th>\n","      <th>alpha</th>\n","      <th>Interpretation</th>\n","      <th>Active Count (in box)</th>\n","      <th>Inactive Count (in box)</th>\n","      <th>Active Count (outliers)</th>\n","      <th>Inactive Count (outliers)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>pIC50</td>\n","      <td>12632112.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>Different distribution (reject H0)</td>\n","      <td>2779</td>\n","      <td>903</td>\n","      <td>1838</td>\n","      <td>1833</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f74d4249-8f39-46a2-a244-83545c1aaf96')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f74d4249-8f39-46a2-a244-83545c1aaf96 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f74d4249-8f39-46a2-a244-83545c1aaf96');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mannwhitney('pIC50')\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Descriptor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"pIC50\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Statistics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 12632112.0,\n        \"max\": 12632112.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          12632112.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.05,\n        \"max\": 0.05,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Different distribution (reject H0)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2779,\n        \"max\": 2779,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2779\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 903,\n        \"max\": 903,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          903\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1838,\n        \"max\": 1838,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1838\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1833,\n        \"max\": 1833,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1833\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["plt.figure(figsize=(5.5, 5.5))\n","\n","sns.boxplot(x = 'bioactivity_class', y = 'MW', data = pIC50_dataset, hue=\"bioactivity_class\", palette=palette)\n","\n","plt.xlabel('Bioactivity class', fontsize=14, fontweight='bold')\n","plt.ylabel('Molecular Weight', fontsize=14, fontweight='bold')\n","\n","plt.savefig('plot_MW.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"bQWij8MJ46Vp","executionInfo":{"status":"ok","timestamp":1708846860121,"user_tz":-480,"elapsed":968,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"0aeca98a-21f1-43c3-ef93-6fd059344d17"},"execution_count":67,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mannwhitney('MW')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"MJ_fBfal5NPB","executionInfo":{"status":"ok","timestamp":1708847497945,"user_tz":-480,"elapsed":582,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"f8c2ba7f-4b59-4e6a-c12e-eccdf6837a07"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Descriptor  Statistics             p  alpha  \\\n","0         MW   7103837.0  3.441783e-19   0.05   \n","\n","                       Interpretation  Active Count (in box)  \\\n","0  Different distribution (reject H0)                   2681   \n","\n","   Inactive Count (in box)  Active Count (outliers)  Inactive Count (outliers)  \n","0                      996                     1936                       1740  "],"text/html":["\n","  <div id=\"df-5a47f794-1563-40c0-9db2-ab0723cc3189\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Descriptor</th>\n","      <th>Statistics</th>\n","      <th>p</th>\n","      <th>alpha</th>\n","      <th>Interpretation</th>\n","      <th>Active Count (in box)</th>\n","      <th>Inactive Count (in box)</th>\n","      <th>Active Count (outliers)</th>\n","      <th>Inactive Count (outliers)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MW</td>\n","      <td>7103837.0</td>\n","      <td>3.441783e-19</td>\n","      <td>0.05</td>\n","      <td>Different distribution (reject H0)</td>\n","      <td>2681</td>\n","      <td>996</td>\n","      <td>1936</td>\n","      <td>1740</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a47f794-1563-40c0-9db2-ab0723cc3189')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5a47f794-1563-40c0-9db2-ab0723cc3189 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5a47f794-1563-40c0-9db2-ab0723cc3189');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mannwhitney('MW')\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Descriptor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"MW\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Statistics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 7103837.0,\n        \"max\": 7103837.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7103837.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3.441782884163118e-19,\n        \"max\": 3.441782884163118e-19,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3.441782884163118e-19\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.05,\n        \"max\": 0.05,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Different distribution (reject H0)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2681,\n        \"max\": 2681,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2681\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 996,\n        \"max\": 996,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          996\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1936,\n        \"max\": 1936,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1936\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1740,\n        \"max\": 1740,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1740\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["plt.figure(figsize=(5.5, 5.5))\n","\n","sns.boxplot(x = 'bioactivity_class', y = 'LogP', data = pIC50_dataset, hue=\"bioactivity_class\", palette=palette)\n","\n","plt.xlabel('Bioactivity class', fontsize=14, fontweight='bold')\n","plt.ylabel('LogP', fontsize=14, fontweight='bold')\n","\n","plt.savefig('plot_LogP.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"UUev80CO5OfZ","executionInfo":{"status":"ok","timestamp":1708847505108,"user_tz":-480,"elapsed":789,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"2ce1967d-e597-458b-cef7-c3992ece23cf"},"execution_count":74,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"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BTk5OQgPD0d6ejoiIyMhk8lMXSp1AocMiIioXSEhIYiJiUF0dDSUSqVw3tPTEzExMQgJCTFhdWQMDARERGSQkJAQTJw4sdWkQvYMWAYGAiIiMphMJms1qZAsA+cQEBEREQMBERERMRAQERERGAiIiIgIDAREREQEBgIiIiICAwERERGBgYCIiIjAQEBERERgICAiIiIwEBARERG4l0GnlJeXQ61WY/LkyaYuhYiIqJWSkhKDN59iD0En9OzZEz16MFN1dSUlJSgpKTF1GUQWg68p89GjRw/07NnToLaSpqampttcD5FJaXtw0tLSTFwJkWXga8oysYeAiIiIGAiIiIiIgYCIiIjAQEBERERgICAiIiIwEBARERF42yERERGBPQREREQEBgIiIiICAwERERGBgYCIiIjAQEBERERgICALtWvXLnzzzTetziuVSjz77LMmqIjo9lqzZg1CQ0NN8tyJiYk4ePBgq/OTJk3Chg0bTFAR3QredkgWSalUwsbGBh999JHofF5eHqRSKQYNGmSiyohujz///BNXr17F3Xfffcefe9KkSXjwwQexbt060fnTp0/D3t4e/fv3v+M1Ucf1MHUBRHeSj4+PqUsgui3uuusuU5fQip+fn6lLoA7gkAF1OceOHcNzzz2HcePGISAgAI888gh2794tanPp0iW88cYbCA4OxvDhwzFp0iTExMQAaO4dOHLkCA4cOIChQ4di6NCh2Lx5s3BNO2SQmZmJoUOH4tdffxV9b7VajbFjxwrfDwDy8/OxdOlS3HfffQgICMCSJUvw559/3safAlHHtBwy2LVrF4YOHYrTp08jLCwMAQEBeOihh1q9jg4cOIBnnnkGQUFBUCgUmDNnDtLT01t977KyMqxevRoPPPAA7r33XkybNg3btm0D0Nw7UFRUhP/7v/8TXm+7du0SrmmHDHbt2gU/Pz9cvHhR9L1ramowfPhwbN++XTh37NgxzJ8/HwEBAbjvvvsQGRmJyspKo/2sSDf2EFCXU1xcDIVCgb/+9a+Qy+XIzs7Gq6++iqamJjz66KNobGzEggULUFRUhGXLlmHIkCEoLS3FL7/8AgBYv349XnzxRVhbW+Oll14CAPTr16/V8wQGBsLV1RWpqakYMWKEcP7w4cO4ePGi8Me1oKAA8+bNg6+vL/7xj39AIpHgww8/xMKFC7F3717I5fI78FMh6rioqCg88cQTeOaZZ/Dll19izZo1GDFiBAYPHgwAKCwsxMSJE/G3v/0NUqkU6enpWLJkCbZt24YxY8YAAKqrqzF37lwAwKpVq9C/f3/88ccfQiDesmULlixZAoVCgb/97W8AdPdWTJkyBevXr8fevXvx9NNPC+e///57AMC0adMANIcBpVKJCRMm4N1338W1a9fwz3/+E88//zySk5Nv00+KAAYC6oJmzpwpPG5qakJgYCDKysqQnJyMRx99FLt378bp06exfft2jBw5Umj76KOPAmgeFrC1tYWNjQ0CAgLafB6pVIoZM2YgNTUVq1evhkQiAQCkpKTA19cXQ4cOBdD8B8/BwQGffPIJevbsCQBQKBSYPHkyduzYgaeeesrYPwIio3jqqaeE38+RI0fi4MGD+O677/D8888DgOiNWaPRYMyYMcjLy8OXX34pBILExERUVlbi22+/FeYCBAUFCV/n5+cHuVyOvn376n292dnZYcKECUhJSRE9b0pKCsaOHQtHR0cAQExMDIYPH44tW7YIr8khQ4YgNDQUBw8exIQJEzr/gyGdOGRAXU5tbS02btyIiRMn4p577sE999yD5ORknD9/HgDw888/Y/DgwaIwcKtmzpwp6l1obGyESqUShZIff/wRkyZNgkwmw40bN3Djxg3Y29vDz88PJ0+e7HQNRLfLuHHjhMc2Njbw8PBAaWmpcK60tBQvvfQSxo8fDz8/P9xzzz04dOiQ8FoDml9v999/v1EmBs6cORPHjx9HcXExAKC8vBxZWVnC6+3atWvIzs7GtGnToFarhdfbwIED4e7u3mp4j4yLPQTU5axZswbHjh3DsmXLhE/7X3zxBb799lsAzWOOrq6uRnmue++9F3fddRdSUlIwatQopKen49KlS6Lbt6qrq7Ft2zZhzLQlKysro9RBdDvY2dmJjq2srNDY2AiguUdg6dKluHz5MlauXIkBAwagV69eiI+PR0lJifA1NTU18PX1NUo9EydORK9evbBnzx4sXrwY3377LXr27ImQkBAAzXOD1Go13nrrLbz11lutvr5lXWR8DATUpTQ0NODAgQNYs2YNlEqlcP7zzz8XHjs6OuLMmTNGe86ZM2ciOTkZr776KlJTU+Hv7w8vLy/huoODAyZMmIAnn3yy1df27t3baHUQ3Ul//PEHTp8+jffee094QwaA+vp6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\n"},"metadata":{}}]},{"cell_type":"code","source":["mannwhitney('LogP')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"qyD19Y8V5Ol9","executionInfo":{"status":"ok","timestamp":1708847507222,"user_tz":-480,"elapsed":371,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"b7e8dccd-42e1-4ae6-ed78-442f8cccf840"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  Descriptor  Statistics         p  alpha  \\\n","0       LogP   6434435.0  0.178484   0.05   \n","\n","                          Interpretation  Active Count (in box)  \\\n","0  Same distribution (fail to reject H0)                   2466   \n","\n","   Inactive Count (in box)  Active Count (outliers)  Inactive Count (outliers)  \n","0                     1211                     2151                       1525  "],"text/html":["\n","  <div id=\"df-2bcf5f65-48ea-4e85-903c-ab68201ff5d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Descriptor</th>\n","      <th>Statistics</th>\n","      <th>p</th>\n","      <th>alpha</th>\n","      <th>Interpretation</th>\n","      <th>Active Count (in box)</th>\n","      <th>Inactive Count (in box)</th>\n","      <th>Active Count (outliers)</th>\n","      <th>Inactive Count (outliers)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LogP</td>\n","      <td>6434435.0</td>\n","      <td>0.178484</td>\n","      <td>0.05</td>\n","      <td>Same distribution (fail to reject H0)</td>\n","      <td>2466</td>\n","      <td>1211</td>\n","      <td>2151</td>\n","      <td>1525</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2bcf5f65-48ea-4e85-903c-ab68201ff5d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2bcf5f65-48ea-4e85-903c-ab68201ff5d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2bcf5f65-48ea-4e85-903c-ab68201ff5d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mannwhitney('LogP')\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Descriptor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"LogP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Statistics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 6434435.0,\n        \"max\": 6434435.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6434435.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.17848385331545236,\n        \"max\": 0.17848385331545236,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.17848385331545236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.05,\n        \"max\": 0.05,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Same distribution (fail to reject H0)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2466,\n        \"max\": 2466,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2466\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1211,\n        \"max\": 1211,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1211\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2151,\n        \"max\": 2151,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2151\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1525,\n        \"max\": 1525,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1525\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["plt.figure(figsize=(5.5, 5.5))\n","\n","sns.boxplot(x = 'bioactivity_class', y = 'NumHDonors', data = pIC50_dataset, hue=\"bioactivity_class\", palette=palette)\n","\n","plt.xlabel('Bioactivity class', fontsize=14, fontweight='bold')\n","plt.ylabel('NumHDonors', fontsize=14, fontweight='bold')\n","\n","plt.savefig('plot_NumHDonors.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"get4M4m85NYs","executionInfo":{"status":"ok","timestamp":1708847511247,"user_tz":-480,"elapsed":1248,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"127975a5-0df9-460c-d071-6f1bf789ddeb"},"execution_count":76,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mannwhitney('NumHDonors')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"-zkLAbj25NiI","executionInfo":{"status":"ok","timestamp":1708847512861,"user_tz":-480,"elapsed":369,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"88a9d949-5478-44d4-f7bc-8511d2bd16fc"},"execution_count":77,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Descriptor  Statistics        p  alpha                      Interpretation  \\\n","0  NumHDonors   6021049.0  0.00046   0.05  Different distribution (reject H0)   \n","\n","   Active Count (in box)  Inactive Count (in box)  Active Count (outliers)  \\\n","0                   4031                     2102                      586   \n","\n","   Inactive Count (outliers)  \n","0                        634  "],"text/html":["\n","  <div id=\"df-4f52d0cc-a676-461c-990d-4cdac8edfbce\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Descriptor</th>\n","      <th>Statistics</th>\n","      <th>p</th>\n","      <th>alpha</th>\n","      <th>Interpretation</th>\n","      <th>Active Count (in box)</th>\n","      <th>Inactive Count (in box)</th>\n","      <th>Active Count (outliers)</th>\n","      <th>Inactive Count (outliers)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NumHDonors</td>\n","      <td>6021049.0</td>\n","      <td>0.00046</td>\n","      <td>0.05</td>\n","      <td>Different distribution (reject H0)</td>\n","      <td>4031</td>\n","      <td>2102</td>\n","      <td>586</td>\n","      <td>634</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4f52d0cc-a676-461c-990d-4cdac8edfbce')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4f52d0cc-a676-461c-990d-4cdac8edfbce button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4f52d0cc-a676-461c-990d-4cdac8edfbce');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mannwhitney('NumHDonors')\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Descriptor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NumHDonors\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Statistics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 6021049.0,\n        \"max\": 6021049.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6021049.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0004597433503538721,\n        \"max\": 0.0004597433503538721,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0004597433503538721\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.05,\n        \"max\": 0.05,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Different distribution (reject H0)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 4031,\n        \"max\": 4031,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          4031\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 2102,\n        \"max\": 2102,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2102\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 586,\n        \"max\": 586,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          586\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 634,\n        \"max\": 634,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          634\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":77}]},{"cell_type":"code","source":["plt.figure(figsize=(5.5, 5.5))\n","\n","sns.boxplot(x = 'bioactivity_class', y = 'NumHAcceptors', data = pIC50_dataset, hue=\"bioactivity_class\", palette=palette)\n","\n","plt.xlabel('Bioactivity class', fontsize=14, fontweight='bold')\n","plt.ylabel('NumHAcceptors', fontsize=14, fontweight='bold')\n","\n","plt.savefig('plot_NumHAcceptors.pdf', bbox_inches='tight')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"id":"aN_T1bum6Gwy","executionInfo":{"status":"ok","timestamp":1708847519364,"user_tz":-480,"elapsed":1226,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"3a133c50-9551-49d1-dd4c-e412e2daed98"},"execution_count":78,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 550x550 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["mannwhitney('NumHAcceptors')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":187},"id":"WQRmFCEB6Gq6","executionInfo":{"status":"ok","timestamp":1708847522091,"user_tz":-480,"elapsed":538,"user":{"displayName":"Kate Nicole Lim","userId":"00275990133798471119"}},"outputId":"dcfbad85-0c17-44fd-afd4-de817ec5a051"},"execution_count":79,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Descriptor  Statistics             p  alpha  \\\n","0  NumHAcceptors   7208384.5  5.530053e-25   0.05   \n","\n","                       Interpretation  Active Count (in box)  \\\n","0  Different distribution (reject H0)                   3276   \n","\n","   Inactive Count (in box)  Active Count (outliers)  Inactive Count (outliers)  \n","0                     1395                     1341                       1341  "],"text/html":["\n","  <div id=\"df-bceb84ef-ea81-472f-8da5-099e362d5b6a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Descriptor</th>\n","      <th>Statistics</th>\n","      <th>p</th>\n","      <th>alpha</th>\n","      <th>Interpretation</th>\n","      <th>Active Count (in box)</th>\n","      <th>Inactive Count (in box)</th>\n","      <th>Active Count (outliers)</th>\n","      <th>Inactive Count (outliers)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NumHAcceptors</td>\n","      <td>7208384.5</td>\n","      <td>5.530053e-25</td>\n","      <td>0.05</td>\n","      <td>Different distribution (reject H0)</td>\n","      <td>3276</td>\n","      <td>1395</td>\n","      <td>1341</td>\n","      <td>1341</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bceb84ef-ea81-472f-8da5-099e362d5b6a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bceb84ef-ea81-472f-8da5-099e362d5b6a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bceb84ef-ea81-472f-8da5-099e362d5b6a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"mannwhitney('NumHAcceptors')\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Descriptor\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NumHAcceptors\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Statistics\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 7208384.5,\n        \"max\": 7208384.5,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          7208384.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"p\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 5.530052572918223e-25,\n        \"max\": 5.530052572918223e-25,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5.530052572918223e-25\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"alpha\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.05,\n        \"max\": 0.05,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.05\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Interpretation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Different distribution (reject H0)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 3276,\n        \"max\": 3276,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          3276\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (in box)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1395,\n        \"max\": 1395,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1395\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Active Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1341,\n        \"max\": 1341,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inactive Count (outliers)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 1341,\n        \"max\": 1341,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":79}]}]}