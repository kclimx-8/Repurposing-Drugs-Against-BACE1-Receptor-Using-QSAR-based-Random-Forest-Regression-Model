{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## Connect to Google Drive"],"metadata":{"id":"jFVdFz7ZbNk8"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"X-CK1YySar_d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707032655365,"user_tz":-480,"elapsed":24045,"user":{"displayName":"Ma Danica Bondoc","userId":"00300422656108780422"}},"outputId":"37855ca1-49cf-4c28-8c80-fe584068e19f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/Shareddrives/Thesis (PS4)/[01] Colab\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","%cd gdrive/Shareddrives/Thesis (PS4)/[01] Colab/[01] DP"]},{"cell_type":"markdown","source":["##Preparing PaDEL\n"],"metadata":{"id":"2e1m-6LmbFfQ"}},{"cell_type":"code","source":["! pip install padelpy"],"metadata":{"id":"df502S3uMlng","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707032688716,"user_tz":-480,"elapsed":4505,"user":{"displayName":"Ma Danica Bondoc","userId":"00300422656108780422"}},"outputId":"df2855b4-a1c6-444c-b95f-13219a5200a8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: padelpy in /usr/local/lib/python3.10/dist-packages (0.1.14)\n"]}]},{"cell_type":"code","source":["##Do not run, already downloaded sa folder##\n","\n","! wget https://github.com/dataprofessor/padel/raw/main/fingerprints_xml.zip\n","! unzip fingerprints_xml.zip\n","\n","##Do not run, already downloaded sa folder##"],"metadata":{"id":"iyfjWimZVuov"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import glob\n","xml_files = glob.glob(\"*.xml\")\n","xml_files.sort()\n","xml_files"],"metadata":{"id":"w6_a71PiauUk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707032718946,"user_tz":-480,"elapsed":15,"user":{"displayName":"Ma Danica Bondoc","userId":"00300422656108780422"}},"outputId":"6b915ea2-2c42-4ee0-d83c-64d8d07243c7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['AtomPairs2DFingerprintCount.xml',\n"," 'AtomPairs2DFingerprinter.xml',\n"," 'EStateFingerprinter.xml',\n"," 'ExtendedFingerprinter.xml',\n"," 'Fingerprinter.xml',\n"," 'GraphOnlyFingerprinter.xml',\n"," 'KlekotaRothFingerprintCount.xml',\n"," 'KlekotaRothFingerprinter.xml',\n"," 'MACCSFingerprinter.xml',\n"," 'PubchemFingerprinter.xml',\n"," 'SubstructureFingerprintCount.xml',\n"," 'SubstructureFingerprinter.xml']"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["FP_list = ['AtomPairs2DCount',\n"," 'AtomPairs2D',\n"," 'EState',\n"," 'CDKextended',\n"," 'CDK',\n"," 'CDKgraphonly',\n"," 'KlekotaRothCount',\n"," 'KlekotaRoth',\n"," 'MACCS',\n"," 'PubChem',\n"," 'SubstructureCount',\n"," 'Substructure']"],"metadata":{"id":"UisnuElAau3-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fp = dict(zip(FP_list, xml_files))"],"metadata":{"id":"VKKwDbl8a62v"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Dataset"],"metadata":{"id":"XDzo9SxktDX-"}},{"cell_type":"code","source":["import pandas as pd\n","df = pd.read_csv ('04_bioactvity_pIC50.csv')\n","df"],"metadata":{"id":"OeE0KXrLbAgk","colab":{"base_uri":"https://localhost:8080/","height":635},"executionInfo":{"status":"ok","timestamp":1707032730030,"user_tz":-480,"elapsed":926,"user":{"displayName":"Ma Danica Bondoc","userId":"00300422656108780422"}},"outputId":"e24cfa6c-87f8-4901-b012-048a50ce0e40"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0 molecule_chembl_id  \\\n","0              0       CHEMBL406146   \n","1              1        CHEMBL78946   \n","2              2       CHEMBL324109   \n","3              3       CHEMBL114147   \n","4              4       CHEMBL419949   \n","...          ...                ...   \n","7348        7348      CHEMBL5192597   \n","7349        7349      CHEMBL5184180   \n","7350        7350      CHEMBL5184529   \n","7351        7351      CHEMBL5220695   \n","7352        7352      CHEMBL5219239   \n","\n","                                       canonical_smiles bioactivity_class  \\\n","0     CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...            active   \n","1     CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...            active   \n","2     CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...            active   \n","3     CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...          inactive   \n","4     CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...          inactive   \n","...                                                 ...               ...   \n","7348  COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...            active   \n","7349  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...          inactive   \n","7350  CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...            active   \n","7351      CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1            active   \n","7352       CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O            active   \n","\n","            MW    LogP  NumHDonors  NumHAcceptors     pIC50  \n","0      999.085 -1.4355        13.0           13.0  6.384050  \n","1      893.005 -1.7361        12.0           12.0  8.698970  \n","2      751.988  2.3535         8.0            9.0  6.337242  \n","3      737.895  1.9626         8.0            8.0  5.045757  \n","4      828.020  3.5739         8.0            8.0  5.251812  \n","...        ...     ...         ...            ...       ...  \n","7348  1057.256  2.4833         7.0           13.0  6.110698  \n","7349  3036.578  2.0591        26.0           43.0  5.986741  \n","7350  3052.577  1.7647        27.0           44.0  6.081970  \n","7351   377.485  3.3450         3.0            5.0  7.821023  \n","7352   391.512  3.7335         3.0            5.0  7.812479  \n","\n","[7353 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-f3e0154e-588b-45ca-aec3-c839973ede4f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>molecule_chembl_id</th>\n","      <th>canonical_smiles</th>\n","      <th>bioactivity_class</th>\n","      <th>MW</th>\n","      <th>LogP</th>\n","      <th>NumHDonors</th>\n","      <th>NumHAcceptors</th>\n","      <th>pIC50</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>CHEMBL406146</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@@H](NC(=O)[C@@H](N)CCC(=O...</td>\n","      <td>active</td>\n","      <td>999.085</td>\n","      <td>-1.4355</td>\n","      <td>13.0</td>\n","      <td>13.0</td>\n","      <td>6.384050</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>CHEMBL78946</td>\n","      <td>CC(C)C[C@H](NC(=O)[C@H](CC(N)=O)NC(=O)[C@@H](N...</td>\n","      <td>active</td>\n","      <td>893.005</td>\n","      <td>-1.7361</td>\n","      <td>12.0</td>\n","      <td>12.0</td>\n","      <td>8.698970</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>CHEMBL324109</td>\n","      <td>CCC(C)C[C@H](NC(=O)[C@H](CC(C)C)NC(C)=O)[C@@H]...</td>\n","      <td>active</td>\n","      <td>751.988</td>\n","      <td>2.3535</td>\n","      <td>8.0</td>\n","      <td>9.0</td>\n","      <td>6.337242</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>CHEMBL114147</td>\n","      <td>CC(=O)NCC(=O)N[C@@H](Cc1ccccc1)[C@@H](O)CC(=O)...</td>\n","      <td>inactive</td>\n","      <td>737.895</td>\n","      <td>1.9626</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>5.045757</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>CHEMBL419949</td>\n","      <td>CC(=O)N[C@@H](Cc1ccccc1)C(=O)N[C@@H](Cc1ccccc1...</td>\n","      <td>inactive</td>\n","      <td>828.020</td>\n","      <td>3.5739</td>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>5.251812</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>7348</td>\n","      <td>CHEMBL5192597</td>\n","      <td>COC(=O)[C@@H]1CCCN1C(=O)[C@@H](Cc1ccc(O)cc1)N(...</td>\n","      <td>active</td>\n","      <td>1057.256</td>\n","      <td>2.4833</td>\n","      <td>7.0</td>\n","      <td>13.0</td>\n","      <td>6.110698</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>7349</td>\n","      <td>CHEMBL5184180</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>inactive</td>\n","      <td>3036.578</td>\n","      <td>2.0591</td>\n","      <td>26.0</td>\n","      <td>43.0</td>\n","      <td>5.986741</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>7350</td>\n","      <td>CHEMBL5184529</td>\n","      <td>CC(C)C[C@H](NC(=O)C[C@H](O)[C@H](Cc1ccccc1)NC(...</td>\n","      <td>active</td>\n","      <td>3052.577</td>\n","      <td>1.7647</td>\n","      <td>27.0</td>\n","      <td>44.0</td>\n","      <td>6.081970</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>7351</td>\n","      <td>CHEMBL5220695</td>\n","      <td>CC(C)(C)OC(=O)Nc1ccc(O)c(C(=O)NCCCN2CCCCC2)c1</td>\n","      <td>active</td>\n","      <td>377.485</td>\n","      <td>3.3450</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>7.821023</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>7352</td>\n","      <td>CHEMBL5219239</td>\n","      <td>CC1CCCCN1CCCNC(=O)c1cc(NC(=O)OC(C)(C)C)ccc1O</td>\n","      <td>active</td>\n","      <td>391.512</td>\n","      <td>3.7335</td>\n","      <td>3.0</td>\n","      <td>5.0</td>\n","      <td>7.812479</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3e0154e-588b-45ca-aec3-c839973ede4f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3e0154e-588b-45ca-aec3-c839973ede4f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3e0154e-588b-45ca-aec3-c839973ede4f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3c191a0e-5447-4e6c-9ab8-152ec34f59a6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3c191a0e-5447-4e6c-9ab8-152ec34f59a6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3c191a0e-5447-4e6c-9ab8-152ec34f59a6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df2 = pd.concat( [df['canonical_smiles'],df['molecule_chembl_id']], axis=1 )\n","df2.to_csv('chemblsmiles.smi', sep='\\t', index=False, header=False)"],"metadata":{"id":"r4RH-0XecGzn"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Calculating Fingerprint"],"metadata":{"id":"vU-oI3Ass5Gr"}},{"cell_type":"code","source":["from padelpy import padeldescriptor"],"metadata":{"id":"dS0IgYFutT3R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["\n","\n","```\n","# run until here then to specific fingerprint\n","```\n","\n"],"metadata":{"id":"62BG-f932yaa"}},{"cell_type":"markdown","source":["AtomPairs2DCount"],"metadata":{"id":"9eTTvzDFteMl"}},{"cell_type":"code","source":["fingerprint = 'AtomPairs2DCount' #change to name of fingerprint similar sa text heading\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"cQEd7PXotXXk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"JLoaf8SDtqTE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"zRbY0jXAv8Rt"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["AtomPairs2D"],"metadata":{"id":"Pre1KtG4uvij"}},{"cell_type":"code","source":["fingerprint = 'AtomPairs2D'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"pSjjfrLac5CU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"D5co1aH7c5Cl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"HFhkIlwyc5Cm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["EState"],"metadata":{"id":"q08xkYaDu0D3"}},{"cell_type":"code","source":["fingerprint = 'EState'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"9RpKlC8yKrQK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"XBDDxJjOKrQL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"pYeuau3cKrQM"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["CDKextended"],"metadata":{"id":"0HlH9OllvFUY"}},{"cell_type":"code","source":["fingerprint = 'CDKextended' #change to name of fingerprint similar sa text heading\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"S9x-P12wvIbp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"UyccErZavIok"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"0YNLN4Jnv9s5"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["CDK"],"metadata":{"id":"rCztP08RvJBg"}},{"cell_type":"code","source":["fingerprint = 'CDK'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"POtfaZs3vUl3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"Txc4w9I0vUZT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"qvIiS8gqv_Vi","colab":{"base_uri":"https://localhost:8080/","height":444},"executionInfo":{"status":"ok","timestamp":1706874901782,"user_tz":-480,"elapsed":1074,"user":{"displayName":"Kim Nicole Samson","userId":"05855814341150951331"}},"outputId":"c8f1a12e-0a52-4c8b-9174-af8dc7dcf15c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Name  FP1  FP2  FP3  FP4  FP5  FP6  FP7  FP8  FP9  ...  FP1015  \\\n","0      CHEMBL406146    0    0    0    0    1    0    0    0    0  ...       0   \n","1       CHEMBL78946    0    0    0    0    1    0    0    0    0  ...       0   \n","2      CHEMBL324109    0    0    0    0    1    0    1    0    0  ...       0   \n","3      CHEMBL114147    0    0    0    0    0    0    0    0    0  ...       0   \n","4      CHEMBL419949    0    0    0    0    1    0    0    0    0  ...       0   \n","...             ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...     ...   \n","7348  CHEMBL5192597    1    0    0    0    1    0    0    0    0  ...       0   \n","7349  CHEMBL5184180    0    0    0    0    1    0    0    0    0  ...       1   \n","7350  CHEMBL5184529    0    0    0    0    1    0    0    0    0  ...       1   \n","7351  CHEMBL5220695    0    0    0    0    0    0    1    1    0  ...       0   \n","7352  CHEMBL5219239    0    0    0    0    0    0    1    1    0  ...       0   \n","\n","      FP1016  FP1017  FP1018  FP1019  FP1020  FP1021  FP1022  FP1023  FP1024  \n","0          0       0       0       0       0       0       0       0       0  \n","1          0       0       0       0       0       0       0       0       0  \n","2          0       1       0       1       0       0       0       0       0  \n","3          0       1       0       0       0       0       0       0       0  \n","4          1       1       0       0       0       0       0       1       0  \n","...      ...     ...     ...     ...     ...     ...     ...     ...     ...  \n","7348       1       0       1       0       0       0       0       0       0  \n","7349       1       0       1       0       1       1       1       1       1  \n","7350       1       0       1       0       1       1       1       1       1  \n","7351       1       1       0       1       0       0       0       0       0  \n","7352       1       1       0       1       0       0       0       0       0  \n","\n","[7353 rows x 1025 columns]"],"text/html":["\n","  <div id=\"df-f36c7623-9949-4a03-a1bd-55abd3c7e2ea\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>FP1</th>\n","      <th>FP2</th>\n","      <th>FP3</th>\n","      <th>FP4</th>\n","      <th>FP5</th>\n","      <th>FP6</th>\n","      <th>FP7</th>\n","      <th>FP8</th>\n","      <th>FP9</th>\n","      <th>...</th>\n","      <th>FP1015</th>\n","      <th>FP1016</th>\n","      <th>FP1017</th>\n","      <th>FP1018</th>\n","      <th>FP1019</th>\n","      <th>FP1020</th>\n","      <th>FP1021</th>\n","      <th>FP1022</th>\n","      <th>FP1023</th>\n","      <th>FP1024</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 1025 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f36c7623-9949-4a03-a1bd-55abd3c7e2ea')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f36c7623-9949-4a03-a1bd-55abd3c7e2ea button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f36c7623-9949-4a03-a1bd-55abd3c7e2ea');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-36a658b8-b1a6-40aa-9106-dea2bc61f916\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-36a658b8-b1a6-40aa-9106-dea2bc61f916')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-36a658b8-b1a6-40aa-9106-dea2bc61f916 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["CDKgraphonly"],"metadata":{"id":"wgYt92IHvV1b"}},{"cell_type":"code","source":["fingerprint = 'CDKgraphonly'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"hl9VVOqmxjFl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"vIcuuFxtxjFm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"jBepuLp_xjFm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["KlekotaRothCount"],"metadata":{"id":"_ejQVMEhvYVK"}},{"cell_type":"code","source":["fingerprint = 'KlekotaRothCount'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"A82L2vptvheP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"W_WeDV7OvhQg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"ZYUyPcHNwDHs","colab":{"base_uri":"https://localhost:8080/","height":444},"executionInfo":{"status":"ok","timestamp":1706955504150,"user_tz":-480,"elapsed":8052,"user":{"displayName":"Kim Nicole Samson","userId":"05855814341150951331"}},"outputId":"e951c045-8f8c-4c4e-eb34-5d547b242afd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Name  KRFPC1  KRFPC2  KRFPC3  KRFPC4  KRFPC5  KRFPC6  KRFPC7  \\\n","0      CHEMBL406146    11.0     2.0     0.0     0.0     0.0     0.0     0.0   \n","1       CHEMBL78946    11.0     2.0     0.0     0.0     0.0     0.0     0.0   \n","2      CHEMBL324109     9.0     3.0     0.0     0.0     0.0     0.0     0.0   \n","3      CHEMBL114147     7.0     3.0     0.0     0.0     0.0     0.0     0.0   \n","4      CHEMBL419949     8.0     3.0     0.0     0.0     0.0     0.0     0.0   \n","...             ...     ...     ...     ...     ...     ...     ...     ...   \n","7348  CHEMBL5192597    10.0     2.0     0.0     0.0     0.0     0.0     0.0   \n","7349  CHEMBL5184180    19.0     2.0     0.0     0.0     0.0     0.0     0.0   \n","7350  CHEMBL5184529    19.0     2.0     0.0     0.0     0.0     0.0     0.0   \n","7351  CHEMBL5220695     0.0     0.0     0.0     0.0     0.0     0.0     0.0   \n","7352  CHEMBL5219239     1.0     0.0     0.0     0.0     0.0     0.0     0.0   \n","\n","      KRFPC8  KRFPC9  ...  KRFPC4851  KRFPC4852  KRFPC4853  KRFPC4854  \\\n","0        0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","1        0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","2        0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","3        0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","4        0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","...      ...     ...  ...        ...        ...        ...        ...   \n","7348     0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","7349     0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","7350     0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","7351     0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","7352     0.0     0.0  ...        0.0        0.0        0.0        0.0   \n","\n","      KRFPC4855  KRFPC4856  KRFPC4857  KRFPC4858  KRFPC4859  KRFPC4860  \n","0           0.0        0.0        0.0        0.0        0.0        0.0  \n","1           0.0        0.0        0.0        0.0        0.0        0.0  \n","2           0.0        0.0        0.0        0.0        0.0        0.0  \n","3           0.0        0.0        0.0        0.0        0.0        0.0  \n","4           0.0        0.0        0.0        0.0        0.0        0.0  \n","...         ...        ...        ...        ...        ...        ...  \n","7348        0.0        0.0        0.0        0.0        0.0        0.0  \n","7349        0.0        0.0        0.0        0.0        0.0        0.0  \n","7350        0.0        0.0        0.0        0.0        0.0        0.0  \n","7351        0.0        0.0        0.0        0.0        0.0        0.0  \n","7352        0.0        0.0        0.0        0.0        0.0        0.0  \n","\n","[7353 rows x 4861 columns]"],"text/html":["\n","  <div id=\"df-5cafcc84-9fa8-407f-8762-3b3f438ee0a5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>KRFPC1</th>\n","      <th>KRFPC2</th>\n","      <th>KRFPC3</th>\n","      <th>KRFPC4</th>\n","      <th>KRFPC5</th>\n","      <th>KRFPC6</th>\n","      <th>KRFPC7</th>\n","      <th>KRFPC8</th>\n","      <th>KRFPC9</th>\n","      <th>...</th>\n","      <th>KRFPC4851</th>\n","      <th>KRFPC4852</th>\n","      <th>KRFPC4853</th>\n","      <th>KRFPC4854</th>\n","      <th>KRFPC4855</th>\n","      <th>KRFPC4856</th>\n","      <th>KRFPC4857</th>\n","      <th>KRFPC4858</th>\n","      <th>KRFPC4859</th>\n","      <th>KRFPC4860</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CHEMBL406146</td>\n","      <td>11.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>CHEMBL78946</td>\n","      <td>11.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>CHEMBL324109</td>\n","      <td>9.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>CHEMBL114147</td>\n","      <td>7.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CHEMBL419949</td>\n","      <td>8.0</td>\n","      <td>3.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7348</th>\n","      <td>CHEMBL5192597</td>\n","      <td>10.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7349</th>\n","      <td>CHEMBL5184180</td>\n","      <td>19.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7350</th>\n","      <td>CHEMBL5184529</td>\n","      <td>19.0</td>\n","      <td>2.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7351</th>\n","      <td>CHEMBL5220695</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>7352</th>\n","      <td>CHEMBL5219239</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7353 rows × 4861 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5cafcc84-9fa8-407f-8762-3b3f438ee0a5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5cafcc84-9fa8-407f-8762-3b3f438ee0a5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5cafcc84-9fa8-407f-8762-3b3f438ee0a5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-47bdfae0-fdb5-4614-a789-5a17e4dd2740\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47bdfae0-fdb5-4614-a789-5a17e4dd2740')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-47bdfae0-fdb5-4614-a789-5a17e4dd2740 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["KlekotaRoth"],"metadata":{"id":"sKPoJBiQviZm"}},{"cell_type":"code","source":["fingerprint = 'KlekotaRoth'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"EktVo6HQvjwc"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"rTPKpneCvkWQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"C0sYLzEjwCiQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["MACCS"],"metadata":{"id":"htEQuZq5vl6k"}},{"cell_type":"code","source":["fingerprint = 'MACCS'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"cmBfK1P1vmmm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"KWvXa4dGvomV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"uTY9xfHIwBuX"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["PubChem"],"metadata":{"id":"KN_EKsWlvo0B"}},{"cell_type":"code","source":["fingerprint = 'PubChem'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"xffyTf3YvqSm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file,\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"HlloPkoJvqJt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"cuAdttGowBYE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["SubstructureCount"],"metadata":{"id":"oPEuP2jdvqwo"}},{"cell_type":"code","source":["fingerprint = 'SubstructureCount'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"_og1_mDYeKjP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file, #'Substructure.csv'\n","                #descriptortypes='SubstructureFingerprint.xml',\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"XYKNMC1teKjQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"SX__8pTseKjQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Substructure\n"],"metadata":{"id":"VkVpyWMLtOJf"}},{"cell_type":"code","source":["fingerprint = 'Substructure'\n","\n","fingerprint_output_file = ''.join([fingerprint,'.csv'])\n","fingerprint_descriptortypes = fp[fingerprint]"],"metadata":{"id":"4aU0vDXudJXU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["padeldescriptor(mol_dir='chemblsmiles.smi',\n","                d_file=fingerprint_output_file, #'Substructure.csv'\n","                #descriptortypes='SubstructureFingerprint.xml',\n","                descriptortypes= fingerprint_descriptortypes,\n","                detectaromaticity=True,\n","                standardizenitro=True,\n","                standardizetautomers=True,\n","                threads=2,\n","                removesalt=True,\n","                log=True,\n","                fingerprints=True)"],"metadata":{"id":"lPQCZUymgH-J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["descriptors = pd.read_csv(fingerprint_output_file)\n","descriptors"],"metadata":{"id":"wGi2V0PqeJjD"},"execution_count":null,"outputs":[]}]}